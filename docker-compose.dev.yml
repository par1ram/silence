version: '3.8'

services:
  # =============================================================================
  # INFRASTRUCTURE SERVICES (Development)
  # =============================================================================

  postgres:
    image: postgres:15-alpine
    container_name: silence_postgres_dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-silence_auth}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./deployments/docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - silence_dev_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: silence_redis_dev
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - silence_dev_network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: silence_rabbitmq_dev
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-admin}
    volumes:
      - rabbitmq_dev_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - silence_dev_network
    restart: unless-stopped

  influxdb:
    image: influxdb:2.7-alpine
    container_name: silence_influxdb_dev
    environment:
      DOCKER_INFLUXDB_INIT_MODE: ${DOCKER_INFLUXDB_INIT_MODE:-setup}
      DOCKER_INFLUXDB_INIT_USERNAME: ${DOCKER_INFLUXDB_INIT_USERNAME:-admin}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${DOCKER_INFLUXDB_INIT_PASSWORD:-adminpassword}
      DOCKER_INFLUXDB_INIT_ORG: ${DOCKER_INFLUXDB_INIT_ORG:-silence}
      DOCKER_INFLUXDB_INIT_BUCKET: ${DOCKER_INFLUXDB_INIT_BUCKET:-analytics}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN:-your-influxdb-token}
    ports:
      - "${INFLUXDB_PORT:-8086}:8086"
    volumes:
      - influxdb_dev_data:/var/lib/influxdb2
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - silence_dev_network
    restart: unless-stopped

  clickhouse:
    image: clickhouse/clickhouse-server:24.1-alpine
    container_name: silence_clickhouse_dev
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-silence_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-admin}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: ${CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT:-1}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-password}
    ports:
      - "${CLICKHOUSE_HTTP_PORT:-8123}:8123"
      - "${CLICKHOUSE_NATIVE_PORT:-9000}:9000"
    volumes:
      - clickhouse_dev_data:/var/lib/clickhouse
      - ./deployments/docker/clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - silence_dev_network
    restart: unless-stopped

  # =============================================================================
  # DEVELOPMENT TOOLS
  # =============================================================================

  mailhog:
    image: mailhog/mailhog:latest
    container_name: silence_mailhog_dev
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - silence_dev_network
    restart: unless-stopped

  # =============================================================================
  # OPTIONAL: MONITORING STACK FOR DEVELOPMENT
  # =============================================================================

  prometheus:
    image: prom/prometheus:latest
    container_name: silence_prometheus_dev
    ports:
      - "9090:9090"
    volumes:
      - ./deployments/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_dev_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - silence_dev_network
    restart: unless-stopped
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: silence_grafana_dev
    ports:
      - "3000:3000"
    volumes:
      - grafana_dev_data:/var/lib/grafana
      - ./deployments/monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    networks:
      - silence_dev_network
    restart: unless-stopped
    profiles:
      - monitoring

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: silence_jaeger_dev
    ports:
      - "16686:16686"  # UI
      - "14268:14268"  # HTTP collector
    environment:
      COLLECTOR_OTLP_ENABLED: true
    networks:
      - silence_dev_network
    restart: unless-stopped
    profiles:
      - monitoring

# =============================================================================
# VOLUMES
# =============================================================================

volumes:
  postgres_dev_data:
    name: silence_postgres_dev_data
  redis_dev_data:
    name: silence_redis_dev_data
  rabbitmq_dev_data:
    name: silence_rabbitmq_dev_data
  influxdb_dev_data:
    name: silence_influxdb_dev_data
  clickhouse_dev_data:
    name: silence_clickhouse_dev_data
  prometheus_dev_data:
    name: silence_prometheus_dev_data
  grafana_dev_data:
    name: silence_grafana_dev_data

# =============================================================================
# NETWORKS
# =============================================================================

networks:
  silence_dev_network:
    name: silence_dev_network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
