apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: silence
  labels:
    app: silence-vpn
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: silence-vpn
      component: database
  template:
    metadata:
      labels:
        app: silence-vpn
        component: database
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: silence-config
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: silence-secrets
              key: DB_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: silence-config
              key: DB_NAME
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-script
        configMap:
          name: postgres-init-script
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: silence
  labels:
    app: silence-vpn
    component: database
spec:
  selector:
    app: silence-vpn
    component: database
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-script
  namespace: silence
  labels:
    app: silence-vpn
    component: database
data:
  init.sql: |
    -- Create databases for different services
    CREATE DATABASE IF NOT EXISTS silence_auth;
    CREATE DATABASE IF NOT EXISTS silence_server_manager;
    CREATE DATABASE IF NOT EXISTS silence_vpn;
    CREATE DATABASE IF NOT EXISTS silence_analytics;

    -- Create users and grant permissions
    CREATE USER IF NOT EXISTS auth_user WITH PASSWORD 'auth_password';
    GRANT ALL PRIVILEGES ON DATABASE silence_auth TO auth_user;

    CREATE USER IF NOT EXISTS server_manager_user WITH PASSWORD 'server_manager_password';
    GRANT ALL PRIVILEGES ON DATABASE silence_server_manager TO server_manager_user;

    CREATE USER IF NOT EXISTS vpn_user WITH PASSWORD 'vpn_password';
    GRANT ALL PRIVILEGES ON DATABASE silence_vpn TO vpn_user;

    CREATE USER IF NOT EXISTS analytics_user WITH PASSWORD 'analytics_password';
    GRANT ALL PRIVILEGES ON DATABASE silence_analytics TO analytics_user;
