# CI/CD Configuration for Silence VPN Services
# This file contains values for automated deployment

global:
  environment: production
  imageRegistry: ghcr.io
  imagePullSecrets:
    - name: ghcr-secret

# Auth Service
auth:
  enabled: true
  replicaCount: 2
  image:
    repository: silence/auth
    tag: '{{ .Values.imageTag | default .Chart.AppVersion }}'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  ingress:
    enabled: true
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: auth.silence.local
        paths:
          - path: /
            pathType: Prefix
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  env:
    - name: DB_HOST
      value: postgres-service
    - name: DB_PORT
      value: '5432'
    - name: DB_NAME
      value: silence_auth
    - name: DB_USER
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: db-user
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: db-password
    - name: JWT_SECRET
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: jwt-secret

# Gateway Service
gateway:
  enabled: true
  replicaCount: 3
  image:
    repository: silence/gateway
    tag: '{{ .Values.imageTag | default .Chart.AppVersion }}'
    pullPolicy: IfNotPresent
  service:
    type: LoadBalancer
    port: 8080
  ingress:
    enabled: true
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: api.silence.local
        paths:
          - path: /
            pathType: Prefix
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 256Mi
  env:
    - name: AUTH_SERVICE_URL
      value: http://auth-service:8080
    - name: VPN_CORE_URL
      value: http://vpn-core-service:8080
    - name: DPI_BYPASS_URL
      value: http://dpi-bypass-service:8080

# VPN Core Service
vpnCore:
  enabled: true
  replicaCount: 2
  image:
    repository: silence/vpn-core
    tag: '{{ .Values.imageTag | default .Chart.AppVersion }}'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 256Mi
  env:
    - name: WIREGUARD_INTERFACE
      value: wg0
    - name: WIREGUARD_PORT
      value: '51820'

# DPI Bypass Service
dpiBypass:
  enabled: true
  replicaCount: 2
  image:
    repository: silence/dpi-bypass
    tag: '{{ .Values.imageTag | default .Chart.AppVersion }}'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 256Mi

# Server Manager Service
serverManager:
  enabled: true
  replicaCount: 1
  image:
    repository: silence/server-manager
    tag: '{{ .Values.imageTag | default .Chart.AppVersion }}'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8085
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  env:
    - name: DB_HOST
      value: postgres-service
    - name: DB_PORT
      value: '5432'
    - name: DB_NAME
      value: silence_server_manager
    - name: DB_USER
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: db-user
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: db-password

# Analytics Service
analytics:
  enabled: true
  replicaCount: 2
  image:
    repository: silence/analytics
    tag: '{{ .Values.imageTag | default .Chart.AppVersion }}'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 256Mi
  env:
    - name: INFLUXDB_URL
      value: http://influxdb-service:8086
    - name: INFLUXDB_TOKEN
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: influxdb-token
    - name: REDIS_URL
      value: redis-service:6379

# Notifications Service
notifications:
  enabled: true
  replicaCount: 2
  image:
    repository: silence/notifications
    tag: '{{ .Values.imageTag | default .Chart.AppVersion }}'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  env:
    - name: RABBITMQ_URL
      value: amqp://rabbitmq-service:5672
    - name: RABBITMQ_USER
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: rabbitmq-user
    - name: RABBITMQ_PASSWORD
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: rabbitmq-password

# Database Services
postgres:
  enabled: true
  image:
    repository: postgres
    tag: '15-alpine'
  persistence:
    enabled: true
    size: 10Gi
  env:
    - name: POSTGRES_DB
      value: silence
    - name: POSTGRES_USER
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: db-user
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: db-password

redis:
  enabled: true
  image:
    repository: redis
    tag: '7-alpine'
  persistence:
    enabled: true
    size: 5Gi

influxdb:
  enabled: true
  image:
    repository: influxdb
    tag: '2.7-alpine'
  persistence:
    enabled: true
    size: 10Gi
  env:
    - name: DOCKER_INFLUXDB_INIT_MODE
      value: setup
    - name: DOCKER_INFLUXDB_INIT_USERNAME
      value: admin
    - name: DOCKER_INFLUXDB_INIT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: influxdb-password
    - name: DOCKER_INFLUXDB_INIT_ORG
      value: silence
    - name: DOCKER_INFLUXDB_INIT_BUCKET
      value: metrics

rabbitmq:
  enabled: true
  image:
    repository: rabbitmq
    tag: '3-management-alpine'
  persistence:
    enabled: true
    size: 5Gi
  env:
    - name: RABBITMQ_DEFAULT_USER
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: rabbitmq-user
    - name: RABBITMQ_DEFAULT_PASS
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: rabbitmq-password

# Monitoring
monitoring:
  enabled: true
  prometheus:
    enabled: true
    retention: 30d
  grafana:
    enabled: true
    adminPassword:
      valueFrom:
        secretKeyRef:
          name: silence-secrets
          key: grafana-password

# Network Policies
networkPolicies:
  enabled: true
  defaultDeny: true
  allowNamespaces:
    - kube-system
    - ingress-nginx

# Resource Quotas
resourceQuotas:
  enabled: true
  limits:
    requests.cpu: '4'
    requests.memory: 8Gi
    limits.cpu: '8'
    limits.memory: 16Gi
    persistentvolumeclaims: '10'
    services: '20'
    secrets: '20'
    configmaps: '20'
