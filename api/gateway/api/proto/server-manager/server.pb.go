// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/proto/server-manager/server.proto

package server_manager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerType int32

const (
	ServerType_SERVER_TYPE_UNSPECIFIED ServerType = 0
	ServerType_SERVER_TYPE_VPN         ServerType = 1
	ServerType_SERVER_TYPE_DPI         ServerType = 2
	ServerType_SERVER_TYPE_GATEWAY     ServerType = 3
	ServerType_SERVER_TYPE_ANALYTICS   ServerType = 4
)

// Enum value maps for ServerType.
var (
	ServerType_name = map[int32]string{
		0: "SERVER_TYPE_UNSPECIFIED",
		1: "SERVER_TYPE_VPN",
		2: "SERVER_TYPE_DPI",
		3: "SERVER_TYPE_GATEWAY",
		4: "SERVER_TYPE_ANALYTICS",
	}
	ServerType_value = map[string]int32{
		"SERVER_TYPE_UNSPECIFIED": 0,
		"SERVER_TYPE_VPN":         1,
		"SERVER_TYPE_DPI":         2,
		"SERVER_TYPE_GATEWAY":     3,
		"SERVER_TYPE_ANALYTICS":   4,
	}
)

func (x ServerType) Enum() *ServerType {
	p := new(ServerType)
	*p = x
	return p
}

func (x ServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_server_manager_server_proto_enumTypes[0].Descriptor()
}

func (ServerType) Type() protoreflect.EnumType {
	return &file_api_proto_server_manager_server_proto_enumTypes[0]
}

func (x ServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerType.Descriptor instead.
func (ServerType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{0}
}

type ServerStatus int32

const (
	ServerStatus_SERVER_STATUS_UNSPECIFIED ServerStatus = 0
	ServerStatus_SERVER_STATUS_CREATING    ServerStatus = 1
	ServerStatus_SERVER_STATUS_RUNNING     ServerStatus = 2
	ServerStatus_SERVER_STATUS_STOPPED     ServerStatus = 3
	ServerStatus_SERVER_STATUS_ERROR       ServerStatus = 4
	ServerStatus_SERVER_STATUS_DELETING    ServerStatus = 5
)

// Enum value maps for ServerStatus.
var (
	ServerStatus_name = map[int32]string{
		0: "SERVER_STATUS_UNSPECIFIED",
		1: "SERVER_STATUS_CREATING",
		2: "SERVER_STATUS_RUNNING",
		3: "SERVER_STATUS_STOPPED",
		4: "SERVER_STATUS_ERROR",
		5: "SERVER_STATUS_DELETING",
	}
	ServerStatus_value = map[string]int32{
		"SERVER_STATUS_UNSPECIFIED": 0,
		"SERVER_STATUS_CREATING":    1,
		"SERVER_STATUS_RUNNING":     2,
		"SERVER_STATUS_STOPPED":     3,
		"SERVER_STATUS_ERROR":       4,
		"SERVER_STATUS_DELETING":    5,
	}
)

func (x ServerStatus) Enum() *ServerStatus {
	p := new(ServerStatus)
	*p = x
	return p
}

func (x ServerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_server_manager_server_proto_enumTypes[1].Descriptor()
}

func (ServerStatus) Type() protoreflect.EnumType {
	return &file_api_proto_server_manager_server_proto_enumTypes[1]
}

func (x ServerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerStatus.Descriptor instead.
func (ServerStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{1}
}

type ScaleAction int32

const (
	ScaleAction_SCALE_ACTION_UNSPECIFIED ScaleAction = 0
	ScaleAction_SCALE_ACTION_UP          ScaleAction = 1
	ScaleAction_SCALE_ACTION_DOWN        ScaleAction = 2
	ScaleAction_SCALE_ACTION_AUTO        ScaleAction = 3
)

// Enum value maps for ScaleAction.
var (
	ScaleAction_name = map[int32]string{
		0: "SCALE_ACTION_UNSPECIFIED",
		1: "SCALE_ACTION_UP",
		2: "SCALE_ACTION_DOWN",
		3: "SCALE_ACTION_AUTO",
	}
	ScaleAction_value = map[string]int32{
		"SCALE_ACTION_UNSPECIFIED": 0,
		"SCALE_ACTION_UP":          1,
		"SCALE_ACTION_DOWN":        2,
		"SCALE_ACTION_AUTO":        3,
	}
)

func (x ScaleAction) Enum() *ScaleAction {
	p := new(ScaleAction)
	*p = x
	return p
}

func (x ScaleAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScaleAction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_server_manager_server_proto_enumTypes[2].Descriptor()
}

func (ScaleAction) Type() protoreflect.EnumType {
	return &file_api_proto_server_manager_server_proto_enumTypes[2]
}

func (x ScaleAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScaleAction.Descriptor instead.
func (ScaleAction) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{2}
}

// Health
type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{0}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{1}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Server
type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          ServerType             `protobuf:"varint,3,opt,name=type,proto3,enum=server.ServerType" json:"type,omitempty"`
	Status        ServerStatus           `protobuf:"varint,4,opt,name=status,proto3,enum=server.ServerStatus" json:"status,omitempty"`
	Region        string                 `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	Ip            string                 `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          int32                  `protobuf:"varint,7,opt,name=port,proto3" json:"port,omitempty"`
	Cpu           float64                `protobuf:"fixed64,8,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        float64                `protobuf:"fixed64,9,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk          float64                `protobuf:"fixed64,10,opt,name=disk,proto3" json:"disk,omitempty"`
	Network       float64                `protobuf:"fixed64,11,opt,name=network,proto3" json:"network,omitempty"`
	Config        map[string]string      `protobuf:"bytes,12,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{2}
}

func (x *Server) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Server) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Server) GetType() ServerType {
	if x != nil {
		return x.Type
	}
	return ServerType_SERVER_TYPE_UNSPECIFIED
}

func (x *Server) GetStatus() ServerStatus {
	if x != nil {
		return x.Status
	}
	return ServerStatus_SERVER_STATUS_UNSPECIFIED
}

func (x *Server) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Server) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Server) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Server) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *Server) GetMemory() float64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Server) GetDisk() float64 {
	if x != nil {
		return x.Disk
	}
	return 0
}

func (x *Server) GetNetwork() float64 {
	if x != nil {
		return x.Network
	}
	return 0
}

func (x *Server) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Server) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Server) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          ServerType             `protobuf:"varint,2,opt,name=type,proto3,enum=server.ServerType" json:"type,omitempty"`
	Region        string                 `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Config        map[string]string      `protobuf:"bytes,4,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateServerRequest) Reset() {
	*x = CreateServerRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerRequest) ProtoMessage() {}

func (x *CreateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerRequest.ProtoReflect.Descriptor instead.
func (*CreateServerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{3}
}

func (x *CreateServerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateServerRequest) GetType() ServerType {
	if x != nil {
		return x.Type
	}
	return ServerType_SERVER_TYPE_UNSPECIFIED
}

func (x *CreateServerRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CreateServerRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerRequest) Reset() {
	*x = GetServerRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerRequest) ProtoMessage() {}

func (x *GetServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerRequest.ProtoReflect.Descriptor instead.
func (*GetServerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{4}
}

func (x *GetServerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListServersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ServerType             `protobuf:"varint,1,opt,name=type,proto3,enum=server.ServerType" json:"type,omitempty"`
	Status        ServerStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=server.ServerStatus" json:"status,omitempty"`
	Region        string                 `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServersRequest) Reset() {
	*x = ListServersRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersRequest) ProtoMessage() {}

func (x *ListServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersRequest.ProtoReflect.Descriptor instead.
func (*ListServersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{5}
}

func (x *ListServersRequest) GetType() ServerType {
	if x != nil {
		return x.Type
	}
	return ServerType_SERVER_TYPE_UNSPECIFIED
}

func (x *ListServersRequest) GetStatus() ServerStatus {
	if x != nil {
		return x.Status
	}
	return ServerStatus_SERVER_STATUS_UNSPECIFIED
}

func (x *ListServersRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ListServersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListServersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListServersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Servers       []*Server              `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServersResponse) Reset() {
	*x = ListServersResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersResponse) ProtoMessage() {}

func (x *ListServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersResponse.ProtoReflect.Descriptor instead.
func (*ListServersResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{6}
}

func (x *ListServersResponse) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *ListServersResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status        ServerStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=server.ServerStatus" json:"status,omitempty"`
	Config        map[string]string      `protobuf:"bytes,4,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateServerRequest) Reset() {
	*x = UpdateServerRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerRequest) ProtoMessage() {}

func (x *UpdateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateServerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateServerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateServerRequest) GetStatus() ServerStatus {
	if x != nil {
		return x.Status
	}
	return ServerStatus_SERVER_STATUS_UNSPECIFIED
}

func (x *UpdateServerRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type DeleteServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteServerRequest) Reset() {
	*x = DeleteServerRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerRequest) ProtoMessage() {}

func (x *DeleteServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerRequest.ProtoReflect.Descriptor instead.
func (*DeleteServerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteServerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteServerResponse) Reset() {
	*x = DeleteServerResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerResponse) ProtoMessage() {}

func (x *DeleteServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerResponse.ProtoReflect.Descriptor instead.
func (*DeleteServerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteServerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Server Operations
type StartServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartServerRequest) Reset() {
	*x = StartServerRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServerRequest) ProtoMessage() {}

func (x *StartServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServerRequest.ProtoReflect.Descriptor instead.
func (*StartServerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{10}
}

func (x *StartServerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StartServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartServerResponse) Reset() {
	*x = StartServerResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServerResponse) ProtoMessage() {}

func (x *StartServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServerResponse.ProtoReflect.Descriptor instead.
func (*StartServerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{11}
}

func (x *StartServerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopServerRequest) Reset() {
	*x = StopServerRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerRequest) ProtoMessage() {}

func (x *StopServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServerRequest.ProtoReflect.Descriptor instead.
func (*StopServerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{12}
}

func (x *StopServerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StopServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopServerResponse) Reset() {
	*x = StopServerResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerResponse) ProtoMessage() {}

func (x *StopServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServerResponse.ProtoReflect.Descriptor instead.
func (*StopServerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{13}
}

func (x *StopServerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RestartServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartServerRequest) Reset() {
	*x = RestartServerRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartServerRequest) ProtoMessage() {}

func (x *RestartServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartServerRequest.ProtoReflect.Descriptor instead.
func (*RestartServerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{14}
}

func (x *RestartServerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RestartServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartServerResponse) Reset() {
	*x = RestartServerResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartServerResponse) ProtoMessage() {}

func (x *RestartServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartServerResponse.ProtoReflect.Descriptor instead.
func (*RestartServerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{15}
}

func (x *RestartServerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RestartServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Server Monitoring
type ServerStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	CpuUsage      float64                `protobuf:"fixed64,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage   float64                `protobuf:"fixed64,3,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	DiskUsage     float64                `protobuf:"fixed64,4,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	NetworkUsage  float64                `protobuf:"fixed64,5,opt,name=network_usage,json=networkUsage,proto3" json:"network_usage,omitempty"`
	Connections   int32                  `protobuf:"varint,6,opt,name=connections,proto3" json:"connections,omitempty"`
	Uptime        int64                  `protobuf:"varint,7,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerStats) Reset() {
	*x = ServerStats{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStats) ProtoMessage() {}

func (x *ServerStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStats.ProtoReflect.Descriptor instead.
func (*ServerStats) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{16}
}

func (x *ServerStats) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerStats) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *ServerStats) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *ServerStats) GetDiskUsage() float64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *ServerStats) GetNetworkUsage() float64 {
	if x != nil {
		return x.NetworkUsage
	}
	return 0
}

func (x *ServerStats) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

func (x *ServerStats) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *ServerStats) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type GetServerStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerStatsRequest) Reset() {
	*x = GetServerStatsRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerStatsRequest) ProtoMessage() {}

func (x *GetServerStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerStatsRequest.ProtoReflect.Descriptor instead.
func (*GetServerStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{17}
}

func (x *GetServerStatsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ServerHealth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Checks        []*HealthCheck         `protobuf:"bytes,4,rep,name=checks,proto3" json:"checks,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerHealth) Reset() {
	*x = ServerHealth{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerHealth) ProtoMessage() {}

func (x *ServerHealth) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerHealth.ProtoReflect.Descriptor instead.
func (*ServerHealth) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{18}
}

func (x *ServerHealth) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerHealth) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ServerHealth) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServerHealth) GetChecks() []*HealthCheck {
	if x != nil {
		return x.Checks
	}
	return nil
}

func (x *ServerHealth) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type HealthCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ResponseTime  float64                `protobuf:"fixed64,4,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{19}
}

func (x *HealthCheck) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HealthCheck) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheck) GetResponseTime() float64 {
	if x != nil {
		return x.ResponseTime
	}
	return 0
}

type GetServerHealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerHealthRequest) Reset() {
	*x = GetServerHealthRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerHealthRequest) ProtoMessage() {}

func (x *GetServerHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerHealthRequest.ProtoReflect.Descriptor instead.
func (*GetServerHealthRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{20}
}

func (x *GetServerHealthRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MonitorServerRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IntervalSeconds int32                  `protobuf:"varint,2,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MonitorServerRequest) Reset() {
	*x = MonitorServerRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorServerRequest) ProtoMessage() {}

func (x *MonitorServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorServerRequest.ProtoReflect.Descriptor instead.
func (*MonitorServerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{21}
}

func (x *MonitorServerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MonitorServerRequest) GetIntervalSeconds() int32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

type ServerMonitorEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Stats         *ServerStats           `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	Health        *ServerHealth          `protobuf:"bytes,4,opt,name=health,proto3" json:"health,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMonitorEvent) Reset() {
	*x = ServerMonitorEvent{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMonitorEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMonitorEvent) ProtoMessage() {}

func (x *ServerMonitorEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMonitorEvent.ProtoReflect.Descriptor instead.
func (*ServerMonitorEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{22}
}

func (x *ServerMonitorEvent) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerMonitorEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *ServerMonitorEvent) GetStats() *ServerStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *ServerMonitorEvent) GetHealth() *ServerHealth {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *ServerMonitorEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Server Filtering
type GetServersByTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ServerType             `protobuf:"varint,1,opt,name=type,proto3,enum=server.ServerType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServersByTypeRequest) Reset() {
	*x = GetServersByTypeRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServersByTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServersByTypeRequest) ProtoMessage() {}

func (x *GetServersByTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServersByTypeRequest.ProtoReflect.Descriptor instead.
func (*GetServersByTypeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{23}
}

func (x *GetServersByTypeRequest) GetType() ServerType {
	if x != nil {
		return x.Type
	}
	return ServerType_SERVER_TYPE_UNSPECIFIED
}

type GetServersByTypeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Servers       []*Server              `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServersByTypeResponse) Reset() {
	*x = GetServersByTypeResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServersByTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServersByTypeResponse) ProtoMessage() {}

func (x *GetServersByTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServersByTypeResponse.ProtoReflect.Descriptor instead.
func (*GetServersByTypeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{24}
}

func (x *GetServersByTypeResponse) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

type GetServersByRegionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServersByRegionRequest) Reset() {
	*x = GetServersByRegionRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServersByRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServersByRegionRequest) ProtoMessage() {}

func (x *GetServersByRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServersByRegionRequest.ProtoReflect.Descriptor instead.
func (*GetServersByRegionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{25}
}

func (x *GetServersByRegionRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type GetServersByRegionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Servers       []*Server              `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServersByRegionResponse) Reset() {
	*x = GetServersByRegionResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServersByRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServersByRegionResponse) ProtoMessage() {}

func (x *GetServersByRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServersByRegionResponse.ProtoReflect.Descriptor instead.
func (*GetServersByRegionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{26}
}

func (x *GetServersByRegionResponse) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

type GetServersByStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        ServerStatus           `protobuf:"varint,1,opt,name=status,proto3,enum=server.ServerStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServersByStatusRequest) Reset() {
	*x = GetServersByStatusRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServersByStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServersByStatusRequest) ProtoMessage() {}

func (x *GetServersByStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServersByStatusRequest.ProtoReflect.Descriptor instead.
func (*GetServersByStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{27}
}

func (x *GetServersByStatusRequest) GetStatus() ServerStatus {
	if x != nil {
		return x.Status
	}
	return ServerStatus_SERVER_STATUS_UNSPECIFIED
}

type GetServersByStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Servers       []*Server              `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServersByStatusResponse) Reset() {
	*x = GetServersByStatusResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServersByStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServersByStatusResponse) ProtoMessage() {}

func (x *GetServersByStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServersByStatusResponse.ProtoReflect.Descriptor instead.
func (*GetServersByStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{28}
}

func (x *GetServersByStatusResponse) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

// Scaling and Management
type ScaleServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Action        ScaleAction            `protobuf:"varint,2,opt,name=action,proto3,enum=server.ScaleAction" json:"action,omitempty"`
	Spec          *ScaleSpec             `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScaleServerRequest) Reset() {
	*x = ScaleServerRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleServerRequest) ProtoMessage() {}

func (x *ScaleServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleServerRequest.ProtoReflect.Descriptor instead.
func (*ScaleServerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{29}
}

func (x *ScaleServerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScaleServerRequest) GetAction() ScaleAction {
	if x != nil {
		return x.Action
	}
	return ScaleAction_SCALE_ACTION_UNSPECIFIED
}

func (x *ScaleServerRequest) GetSpec() *ScaleSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ScaleSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           float64                `protobuf:"fixed64,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        float64                `protobuf:"fixed64,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk          float64                `protobuf:"fixed64,3,opt,name=disk,proto3" json:"disk,omitempty"`
	Replicas      int32                  `protobuf:"varint,4,opt,name=replicas,proto3" json:"replicas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScaleSpec) Reset() {
	*x = ScaleSpec{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleSpec) ProtoMessage() {}

func (x *ScaleSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleSpec.ProtoReflect.Descriptor instead.
func (*ScaleSpec) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{30}
}

func (x *ScaleSpec) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *ScaleSpec) GetMemory() float64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ScaleSpec) GetDisk() float64 {
	if x != nil {
		return x.Disk
	}
	return 0
}

func (x *ScaleSpec) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

type ScaleServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScaleServerResponse) Reset() {
	*x = ScaleServerResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleServerResponse) ProtoMessage() {}

func (x *ScaleServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleServerResponse.ProtoReflect.Descriptor instead.
func (*ScaleServerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{31}
}

func (x *ScaleServerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ScaleServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateBackupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	BackupType    string                 `protobuf:"bytes,2,opt,name=backup_type,json=backupType,proto3" json:"backup_type,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBackupRequest) Reset() {
	*x = CreateBackupRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBackupRequest) ProtoMessage() {}

func (x *CreateBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBackupRequest.ProtoReflect.Descriptor instead.
func (*CreateBackupRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{32}
}

func (x *CreateBackupRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *CreateBackupRequest) GetBackupType() string {
	if x != nil {
		return x.BackupType
	}
	return ""
}

func (x *CreateBackupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateBackupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	BackupId      string                 `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBackupResponse) Reset() {
	*x = CreateBackupResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBackupResponse) ProtoMessage() {}

func (x *CreateBackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBackupResponse.ProtoReflect.Descriptor instead.
func (*CreateBackupResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{33}
}

func (x *CreateBackupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateBackupResponse) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

func (x *CreateBackupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RestoreBackupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	BackupId      string                 `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreBackupRequest) Reset() {
	*x = RestoreBackupRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreBackupRequest) ProtoMessage() {}

func (x *RestoreBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreBackupRequest.ProtoReflect.Descriptor instead.
func (*RestoreBackupRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{34}
}

func (x *RestoreBackupRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *RestoreBackupRequest) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

type RestoreBackupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreBackupResponse) Reset() {
	*x = RestoreBackupResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreBackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreBackupResponse) ProtoMessage() {}

func (x *RestoreBackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreBackupResponse.ProtoReflect.Descriptor instead.
func (*RestoreBackupResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{35}
}

func (x *RestoreBackupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RestoreBackupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateServerSoftwareRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Force         bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateServerSoftwareRequest) Reset() {
	*x = UpdateServerSoftwareRequest{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServerSoftwareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerSoftwareRequest) ProtoMessage() {}

func (x *UpdateServerSoftwareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerSoftwareRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerSoftwareRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateServerSoftwareRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateServerSoftwareRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpdateServerSoftwareRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type UpdateServerSoftwareResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Status        *UpdateStatus          `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateServerSoftwareResponse) Reset() {
	*x = UpdateServerSoftwareResponse{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServerSoftwareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerSoftwareResponse) ProtoMessage() {}

func (x *UpdateServerSoftwareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerSoftwareResponse.ProtoReflect.Descriptor instead.
func (*UpdateServerSoftwareResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateServerSoftwareResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateServerSoftwareResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateServerSoftwareResponse) GetStatus() *UpdateStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type UpdateStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Progress      int32                  `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStatus) Reset() {
	*x = UpdateStatus{}
	mi := &file_api_proto_server_manager_server_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatus) ProtoMessage() {}

func (x *UpdateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_server_manager_server_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatus.ProtoReflect.Descriptor instead.
func (*UpdateStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_server_manager_server_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateStatus) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *UpdateStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateStatus) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *UpdateStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateStatus) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *UpdateStatus) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

var File_api_proto_server_manager_server_proto protoreflect.FileDescriptor

const file_api_proto_server_manager_server_proto_rawDesc = "" +
	"\n" +
	"%api/proto/server-manager/server.proto\x12\x06server\x1a\x1fgoogle/protobuf/timestamp.proto\"\x0f\n" +
	"\rHealthRequest\"|\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xfb\x03\n" +
	"\x06Server\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12&\n" +
	"\x04type\x18\x03 \x01(\x0e2\x12.server.ServerTypeR\x04type\x12,\n" +
	"\x06status\x18\x04 \x01(\x0e2\x14.server.ServerStatusR\x06status\x12\x16\n" +
	"\x06region\x18\x05 \x01(\tR\x06region\x12\x0e\n" +
	"\x02ip\x18\x06 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\a \x01(\x05R\x04port\x12\x10\n" +
	"\x03cpu\x18\b \x01(\x01R\x03cpu\x12\x16\n" +
	"\x06memory\x18\t \x01(\x01R\x06memory\x12\x12\n" +
	"\x04disk\x18\n" +
	" \x01(\x01R\x04disk\x12\x18\n" +
	"\anetwork\x18\v \x01(\x01R\anetwork\x122\n" +
	"\x06config\x18\f \x03(\v2\x1a.server.Server.ConfigEntryR\x06config\x129\n" +
	"\n" +
	"created_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe5\x01\n" +
	"\x13CreateServerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12&\n" +
	"\x04type\x18\x02 \x01(\x0e2\x12.server.ServerTypeR\x04type\x12\x16\n" +
	"\x06region\x18\x03 \x01(\tR\x06region\x12?\n" +
	"\x06config\x18\x04 \x03(\v2'.server.CreateServerRequest.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\"\n" +
	"\x10GetServerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xb0\x01\n" +
	"\x12ListServersRequest\x12&\n" +
	"\x04type\x18\x01 \x01(\x0e2\x12.server.ServerTypeR\x04type\x12,\n" +
	"\x06status\x18\x02 \x01(\x0e2\x14.server.ServerStatusR\x06status\x12\x16\n" +
	"\x06region\x18\x03 \x01(\tR\x06region\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offset\"U\n" +
	"\x13ListServersResponse\x12(\n" +
	"\aservers\x18\x01 \x03(\v2\x0e.server.ServerR\aservers\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xe3\x01\n" +
	"\x13UpdateServerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12,\n" +
	"\x06status\x18\x03 \x01(\x0e2\x14.server.ServerStatusR\x06status\x12?\n" +
	"\x06config\x18\x04 \x03(\v2'.server.UpdateServerRequest.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"%\n" +
	"\x13DeleteServerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"0\n" +
	"\x14DeleteServerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"$\n" +
	"\x12StartServerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"I\n" +
	"\x13StartServerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"#\n" +
	"\x11StopServerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"H\n" +
	"\x12StopServerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"&\n" +
	"\x14RestartServerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"K\n" +
	"\x15RestartServerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xa2\x02\n" +
	"\vServerStats\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1b\n" +
	"\tcpu_usage\x18\x02 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x03 \x01(\x01R\vmemoryUsage\x12\x1d\n" +
	"\n" +
	"disk_usage\x18\x04 \x01(\x01R\tdiskUsage\x12#\n" +
	"\rnetwork_usage\x18\x05 \x01(\x01R\fnetworkUsage\x12 \n" +
	"\vconnections\x18\x06 \x01(\x05R\vconnections\x12\x16\n" +
	"\x06uptime\x18\a \x01(\x03R\x06uptime\x128\n" +
	"\ttimestamp\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"'\n" +
	"\x15GetServerStatsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xc4\x01\n" +
	"\fServerHealth\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12+\n" +
	"\x06checks\x18\x04 \x03(\v2\x13.server.HealthCheckR\x06checks\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"x\n" +
	"\vHealthCheck\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12#\n" +
	"\rresponse_time\x18\x04 \x01(\x01R\fresponseTime\"(\n" +
	"\x16GetServerHealthRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"Q\n" +
	"\x14MonitorServerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12)\n" +
	"\x10interval_seconds\x18\x02 \x01(\x05R\x0fintervalSeconds\"\xe3\x01\n" +
	"\x12ServerMonitorEvent\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12)\n" +
	"\x05stats\x18\x03 \x01(\v2\x13.server.ServerStatsR\x05stats\x12,\n" +
	"\x06health\x18\x04 \x01(\v2\x14.server.ServerHealthR\x06health\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"A\n" +
	"\x17GetServersByTypeRequest\x12&\n" +
	"\x04type\x18\x01 \x01(\x0e2\x12.server.ServerTypeR\x04type\"D\n" +
	"\x18GetServersByTypeResponse\x12(\n" +
	"\aservers\x18\x01 \x03(\v2\x0e.server.ServerR\aservers\"3\n" +
	"\x19GetServersByRegionRequest\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\"F\n" +
	"\x1aGetServersByRegionResponse\x12(\n" +
	"\aservers\x18\x01 \x03(\v2\x0e.server.ServerR\aservers\"I\n" +
	"\x19GetServersByStatusRequest\x12,\n" +
	"\x06status\x18\x01 \x01(\x0e2\x14.server.ServerStatusR\x06status\"F\n" +
	"\x1aGetServersByStatusResponse\x12(\n" +
	"\aservers\x18\x01 \x03(\v2\x0e.server.ServerR\aservers\"x\n" +
	"\x12ScaleServerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12+\n" +
	"\x06action\x18\x02 \x01(\x0e2\x13.server.ScaleActionR\x06action\x12%\n" +
	"\x04spec\x18\x03 \x01(\v2\x11.server.ScaleSpecR\x04spec\"e\n" +
	"\tScaleSpec\x12\x10\n" +
	"\x03cpu\x18\x01 \x01(\x01R\x03cpu\x12\x16\n" +
	"\x06memory\x18\x02 \x01(\x01R\x06memory\x12\x12\n" +
	"\x04disk\x18\x03 \x01(\x01R\x04disk\x12\x1a\n" +
	"\breplicas\x18\x04 \x01(\x05R\breplicas\"I\n" +
	"\x13ScaleServerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"u\n" +
	"\x13CreateBackupRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1f\n" +
	"\vbackup_type\x18\x02 \x01(\tR\n" +
	"backupType\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"g\n" +
	"\x14CreateBackupResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\tbackup_id\x18\x02 \x01(\tR\bbackupId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"P\n" +
	"\x14RestoreBackupRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1b\n" +
	"\tbackup_id\x18\x02 \x01(\tR\bbackupId\"K\n" +
	"\x15RestoreBackupResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"j\n" +
	"\x1bUpdateServerSoftwareRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\"\x80\x01\n" +
	"\x1cUpdateServerSoftwareResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x14.server.UpdateStatusR\x06status\"\xf3\x01\n" +
	"\fUpdateStatus\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1a\n" +
	"\bprogress\x18\x03 \x01(\x05R\bprogress\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x129\n" +
	"\n" +
	"started_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt*\x87\x01\n" +
	"\n" +
	"ServerType\x12\x1b\n" +
	"\x17SERVER_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fSERVER_TYPE_VPN\x10\x01\x12\x13\n" +
	"\x0fSERVER_TYPE_DPI\x10\x02\x12\x17\n" +
	"\x13SERVER_TYPE_GATEWAY\x10\x03\x12\x19\n" +
	"\x15SERVER_TYPE_ANALYTICS\x10\x04*\xb4\x01\n" +
	"\fServerStatus\x12\x1d\n" +
	"\x19SERVER_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16SERVER_STATUS_CREATING\x10\x01\x12\x19\n" +
	"\x15SERVER_STATUS_RUNNING\x10\x02\x12\x19\n" +
	"\x15SERVER_STATUS_STOPPED\x10\x03\x12\x17\n" +
	"\x13SERVER_STATUS_ERROR\x10\x04\x12\x1a\n" +
	"\x16SERVER_STATUS_DELETING\x10\x05*n\n" +
	"\vScaleAction\x12\x1c\n" +
	"\x18SCALE_ACTION_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fSCALE_ACTION_UP\x10\x01\x12\x15\n" +
	"\x11SCALE_ACTION_DOWN\x10\x02\x12\x15\n" +
	"\x11SCALE_ACTION_AUTO\x10\x032\x9f\v\n" +
	"\x14ServerManagerService\x127\n" +
	"\x06Health\x12\x15.server.HealthRequest\x1a\x16.server.HealthResponse\x12;\n" +
	"\fCreateServer\x12\x1b.server.CreateServerRequest\x1a\x0e.server.Server\x125\n" +
	"\tGetServer\x12\x18.server.GetServerRequest\x1a\x0e.server.Server\x12F\n" +
	"\vListServers\x12\x1a.server.ListServersRequest\x1a\x1b.server.ListServersResponse\x12;\n" +
	"\fUpdateServer\x12\x1b.server.UpdateServerRequest\x1a\x0e.server.Server\x12I\n" +
	"\fDeleteServer\x12\x1b.server.DeleteServerRequest\x1a\x1c.server.DeleteServerResponse\x12F\n" +
	"\vStartServer\x12\x1a.server.StartServerRequest\x1a\x1b.server.StartServerResponse\x12C\n" +
	"\n" +
	"StopServer\x12\x19.server.StopServerRequest\x1a\x1a.server.StopServerResponse\x12L\n" +
	"\rRestartServer\x12\x1c.server.RestartServerRequest\x1a\x1d.server.RestartServerResponse\x12D\n" +
	"\x0eGetServerStats\x12\x1d.server.GetServerStatsRequest\x1a\x13.server.ServerStats\x12G\n" +
	"\x0fGetServerHealth\x12\x1e.server.GetServerHealthRequest\x1a\x14.server.ServerHealth\x12K\n" +
	"\rMonitorServer\x12\x1c.server.MonitorServerRequest\x1a\x1a.server.ServerMonitorEvent0\x01\x12U\n" +
	"\x10GetServersByType\x12\x1f.server.GetServersByTypeRequest\x1a .server.GetServersByTypeResponse\x12[\n" +
	"\x12GetServersByRegion\x12!.server.GetServersByRegionRequest\x1a\".server.GetServersByRegionResponse\x12[\n" +
	"\x12GetServersByStatus\x12!.server.GetServersByStatusRequest\x1a\".server.GetServersByStatusResponse\x12F\n" +
	"\vScaleServer\x12\x1a.server.ScaleServerRequest\x1a\x1b.server.ScaleServerResponse\x12I\n" +
	"\fCreateBackup\x12\x1b.server.CreateBackupRequest\x1a\x1c.server.CreateBackupResponse\x12L\n" +
	"\rRestoreBackup\x12\x1c.server.RestoreBackupRequest\x1a\x1d.server.RestoreBackupResponse\x12a\n" +
	"\x14UpdateServerSoftware\x12#.server.UpdateServerSoftwareRequest\x1a$.server.UpdateServerSoftwareResponseBAZ?github.com/par1ram/silence/api/gateway/api/proto/server-managerb\x06proto3"

var (
	file_api_proto_server_manager_server_proto_rawDescOnce sync.Once
	file_api_proto_server_manager_server_proto_rawDescData []byte
)

func file_api_proto_server_manager_server_proto_rawDescGZIP() []byte {
	file_api_proto_server_manager_server_proto_rawDescOnce.Do(func() {
		file_api_proto_server_manager_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_server_manager_server_proto_rawDesc), len(file_api_proto_server_manager_server_proto_rawDesc)))
	})
	return file_api_proto_server_manager_server_proto_rawDescData
}

var file_api_proto_server_manager_server_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_proto_server_manager_server_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_api_proto_server_manager_server_proto_goTypes = []any{
	(ServerType)(0),                      // 0: server.ServerType
	(ServerStatus)(0),                    // 1: server.ServerStatus
	(ScaleAction)(0),                     // 2: server.ScaleAction
	(*HealthRequest)(nil),                // 3: server.HealthRequest
	(*HealthResponse)(nil),               // 4: server.HealthResponse
	(*Server)(nil),                       // 5: server.Server
	(*CreateServerRequest)(nil),          // 6: server.CreateServerRequest
	(*GetServerRequest)(nil),             // 7: server.GetServerRequest
	(*ListServersRequest)(nil),           // 8: server.ListServersRequest
	(*ListServersResponse)(nil),          // 9: server.ListServersResponse
	(*UpdateServerRequest)(nil),          // 10: server.UpdateServerRequest
	(*DeleteServerRequest)(nil),          // 11: server.DeleteServerRequest
	(*DeleteServerResponse)(nil),         // 12: server.DeleteServerResponse
	(*StartServerRequest)(nil),           // 13: server.StartServerRequest
	(*StartServerResponse)(nil),          // 14: server.StartServerResponse
	(*StopServerRequest)(nil),            // 15: server.StopServerRequest
	(*StopServerResponse)(nil),           // 16: server.StopServerResponse
	(*RestartServerRequest)(nil),         // 17: server.RestartServerRequest
	(*RestartServerResponse)(nil),        // 18: server.RestartServerResponse
	(*ServerStats)(nil),                  // 19: server.ServerStats
	(*GetServerStatsRequest)(nil),        // 20: server.GetServerStatsRequest
	(*ServerHealth)(nil),                 // 21: server.ServerHealth
	(*HealthCheck)(nil),                  // 22: server.HealthCheck
	(*GetServerHealthRequest)(nil),       // 23: server.GetServerHealthRequest
	(*MonitorServerRequest)(nil),         // 24: server.MonitorServerRequest
	(*ServerMonitorEvent)(nil),           // 25: server.ServerMonitorEvent
	(*GetServersByTypeRequest)(nil),      // 26: server.GetServersByTypeRequest
	(*GetServersByTypeResponse)(nil),     // 27: server.GetServersByTypeResponse
	(*GetServersByRegionRequest)(nil),    // 28: server.GetServersByRegionRequest
	(*GetServersByRegionResponse)(nil),   // 29: server.GetServersByRegionResponse
	(*GetServersByStatusRequest)(nil),    // 30: server.GetServersByStatusRequest
	(*GetServersByStatusResponse)(nil),   // 31: server.GetServersByStatusResponse
	(*ScaleServerRequest)(nil),           // 32: server.ScaleServerRequest
	(*ScaleSpec)(nil),                    // 33: server.ScaleSpec
	(*ScaleServerResponse)(nil),          // 34: server.ScaleServerResponse
	(*CreateBackupRequest)(nil),          // 35: server.CreateBackupRequest
	(*CreateBackupResponse)(nil),         // 36: server.CreateBackupResponse
	(*RestoreBackupRequest)(nil),         // 37: server.RestoreBackupRequest
	(*RestoreBackupResponse)(nil),        // 38: server.RestoreBackupResponse
	(*UpdateServerSoftwareRequest)(nil),  // 39: server.UpdateServerSoftwareRequest
	(*UpdateServerSoftwareResponse)(nil), // 40: server.UpdateServerSoftwareResponse
	(*UpdateStatus)(nil),                 // 41: server.UpdateStatus
	nil,                                  // 42: server.Server.ConfigEntry
	nil,                                  // 43: server.CreateServerRequest.ConfigEntry
	nil,                                  // 44: server.UpdateServerRequest.ConfigEntry
	(*timestamppb.Timestamp)(nil),        // 45: google.protobuf.Timestamp
}
var file_api_proto_server_manager_server_proto_depIdxs = []int32{
	45, // 0: server.HealthResponse.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 1: server.Server.type:type_name -> server.ServerType
	1,  // 2: server.Server.status:type_name -> server.ServerStatus
	42, // 3: server.Server.config:type_name -> server.Server.ConfigEntry
	45, // 4: server.Server.created_at:type_name -> google.protobuf.Timestamp
	45, // 5: server.Server.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 6: server.CreateServerRequest.type:type_name -> server.ServerType
	43, // 7: server.CreateServerRequest.config:type_name -> server.CreateServerRequest.ConfigEntry
	0,  // 8: server.ListServersRequest.type:type_name -> server.ServerType
	1,  // 9: server.ListServersRequest.status:type_name -> server.ServerStatus
	5,  // 10: server.ListServersResponse.servers:type_name -> server.Server
	1,  // 11: server.UpdateServerRequest.status:type_name -> server.ServerStatus
	44, // 12: server.UpdateServerRequest.config:type_name -> server.UpdateServerRequest.ConfigEntry
	45, // 13: server.ServerStats.timestamp:type_name -> google.protobuf.Timestamp
	22, // 14: server.ServerHealth.checks:type_name -> server.HealthCheck
	45, // 15: server.ServerHealth.timestamp:type_name -> google.protobuf.Timestamp
	19, // 16: server.ServerMonitorEvent.stats:type_name -> server.ServerStats
	21, // 17: server.ServerMonitorEvent.health:type_name -> server.ServerHealth
	45, // 18: server.ServerMonitorEvent.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 19: server.GetServersByTypeRequest.type:type_name -> server.ServerType
	5,  // 20: server.GetServersByTypeResponse.servers:type_name -> server.Server
	5,  // 21: server.GetServersByRegionResponse.servers:type_name -> server.Server
	1,  // 22: server.GetServersByStatusRequest.status:type_name -> server.ServerStatus
	5,  // 23: server.GetServersByStatusResponse.servers:type_name -> server.Server
	2,  // 24: server.ScaleServerRequest.action:type_name -> server.ScaleAction
	33, // 25: server.ScaleServerRequest.spec:type_name -> server.ScaleSpec
	41, // 26: server.UpdateServerSoftwareResponse.status:type_name -> server.UpdateStatus
	45, // 27: server.UpdateStatus.started_at:type_name -> google.protobuf.Timestamp
	45, // 28: server.UpdateStatus.completed_at:type_name -> google.protobuf.Timestamp
	3,  // 29: server.ServerManagerService.Health:input_type -> server.HealthRequest
	6,  // 30: server.ServerManagerService.CreateServer:input_type -> server.CreateServerRequest
	7,  // 31: server.ServerManagerService.GetServer:input_type -> server.GetServerRequest
	8,  // 32: server.ServerManagerService.ListServers:input_type -> server.ListServersRequest
	10, // 33: server.ServerManagerService.UpdateServer:input_type -> server.UpdateServerRequest
	11, // 34: server.ServerManagerService.DeleteServer:input_type -> server.DeleteServerRequest
	13, // 35: server.ServerManagerService.StartServer:input_type -> server.StartServerRequest
	15, // 36: server.ServerManagerService.StopServer:input_type -> server.StopServerRequest
	17, // 37: server.ServerManagerService.RestartServer:input_type -> server.RestartServerRequest
	20, // 38: server.ServerManagerService.GetServerStats:input_type -> server.GetServerStatsRequest
	23, // 39: server.ServerManagerService.GetServerHealth:input_type -> server.GetServerHealthRequest
	24, // 40: server.ServerManagerService.MonitorServer:input_type -> server.MonitorServerRequest
	26, // 41: server.ServerManagerService.GetServersByType:input_type -> server.GetServersByTypeRequest
	28, // 42: server.ServerManagerService.GetServersByRegion:input_type -> server.GetServersByRegionRequest
	30, // 43: server.ServerManagerService.GetServersByStatus:input_type -> server.GetServersByStatusRequest
	32, // 44: server.ServerManagerService.ScaleServer:input_type -> server.ScaleServerRequest
	35, // 45: server.ServerManagerService.CreateBackup:input_type -> server.CreateBackupRequest
	37, // 46: server.ServerManagerService.RestoreBackup:input_type -> server.RestoreBackupRequest
	39, // 47: server.ServerManagerService.UpdateServerSoftware:input_type -> server.UpdateServerSoftwareRequest
	4,  // 48: server.ServerManagerService.Health:output_type -> server.HealthResponse
	5,  // 49: server.ServerManagerService.CreateServer:output_type -> server.Server
	5,  // 50: server.ServerManagerService.GetServer:output_type -> server.Server
	9,  // 51: server.ServerManagerService.ListServers:output_type -> server.ListServersResponse
	5,  // 52: server.ServerManagerService.UpdateServer:output_type -> server.Server
	12, // 53: server.ServerManagerService.DeleteServer:output_type -> server.DeleteServerResponse
	14, // 54: server.ServerManagerService.StartServer:output_type -> server.StartServerResponse
	16, // 55: server.ServerManagerService.StopServer:output_type -> server.StopServerResponse
	18, // 56: server.ServerManagerService.RestartServer:output_type -> server.RestartServerResponse
	19, // 57: server.ServerManagerService.GetServerStats:output_type -> server.ServerStats
	21, // 58: server.ServerManagerService.GetServerHealth:output_type -> server.ServerHealth
	25, // 59: server.ServerManagerService.MonitorServer:output_type -> server.ServerMonitorEvent
	27, // 60: server.ServerManagerService.GetServersByType:output_type -> server.GetServersByTypeResponse
	29, // 61: server.ServerManagerService.GetServersByRegion:output_type -> server.GetServersByRegionResponse
	31, // 62: server.ServerManagerService.GetServersByStatus:output_type -> server.GetServersByStatusResponse
	34, // 63: server.ServerManagerService.ScaleServer:output_type -> server.ScaleServerResponse
	36, // 64: server.ServerManagerService.CreateBackup:output_type -> server.CreateBackupResponse
	38, // 65: server.ServerManagerService.RestoreBackup:output_type -> server.RestoreBackupResponse
	40, // 66: server.ServerManagerService.UpdateServerSoftware:output_type -> server.UpdateServerSoftwareResponse
	48, // [48:67] is the sub-list for method output_type
	29, // [29:48] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_api_proto_server_manager_server_proto_init() }
func file_api_proto_server_manager_server_proto_init() {
	if File_api_proto_server_manager_server_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_server_manager_server_proto_rawDesc), len(file_api_proto_server_manager_server_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_server_manager_server_proto_goTypes,
		DependencyIndexes: file_api_proto_server_manager_server_proto_depIdxs,
		EnumInfos:         file_api_proto_server_manager_server_proto_enumTypes,
		MessageInfos:      file_api_proto_server_manager_server_proto_msgTypes,
	}.Build()
	File_api_proto_server_manager_server_proto = out.File
	file_api_proto_server_manager_server_proto_goTypes = nil
	file_api_proto_server_manager_server_proto_depIdxs = nil
}
