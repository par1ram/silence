// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: dpi.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BypassType int32

const (
	BypassType_BYPASS_TYPE_UNSPECIFIED          BypassType = 0
	BypassType_BYPASS_TYPE_DOMAIN_FRONTING      BypassType = 1
	BypassType_BYPASS_TYPE_SNI_MASKING          BypassType = 2
	BypassType_BYPASS_TYPE_PACKET_FRAGMENTATION BypassType = 3
	BypassType_BYPASS_TYPE_PROTOCOL_OBFUSCATION BypassType = 4
	BypassType_BYPASS_TYPE_TUNNEL_OBFUSCATION   BypassType = 5
)

// Enum value maps for BypassType.
var (
	BypassType_name = map[int32]string{
		0: "BYPASS_TYPE_UNSPECIFIED",
		1: "BYPASS_TYPE_DOMAIN_FRONTING",
		2: "BYPASS_TYPE_SNI_MASKING",
		3: "BYPASS_TYPE_PACKET_FRAGMENTATION",
		4: "BYPASS_TYPE_PROTOCOL_OBFUSCATION",
		5: "BYPASS_TYPE_TUNNEL_OBFUSCATION",
	}
	BypassType_value = map[string]int32{
		"BYPASS_TYPE_UNSPECIFIED":          0,
		"BYPASS_TYPE_DOMAIN_FRONTING":      1,
		"BYPASS_TYPE_SNI_MASKING":          2,
		"BYPASS_TYPE_PACKET_FRAGMENTATION": 3,
		"BYPASS_TYPE_PROTOCOL_OBFUSCATION": 4,
		"BYPASS_TYPE_TUNNEL_OBFUSCATION":   5,
	}
)

func (x BypassType) Enum() *BypassType {
	p := new(BypassType)
	*p = x
	return p
}

func (x BypassType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BypassType) Descriptor() protoreflect.EnumDescriptor {
	return file_dpi_proto_enumTypes[0].Descriptor()
}

func (BypassType) Type() protoreflect.EnumType {
	return &file_dpi_proto_enumTypes[0]
}

func (x BypassType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BypassType.Descriptor instead.
func (BypassType) EnumDescriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{0}
}

type BypassMethod int32

const (
	BypassMethod_BYPASS_METHOD_UNSPECIFIED   BypassMethod = 0
	BypassMethod_BYPASS_METHOD_HTTP_HEADER   BypassMethod = 1
	BypassMethod_BYPASS_METHOD_TLS_HANDSHAKE BypassMethod = 2
	BypassMethod_BYPASS_METHOD_TCP_FRAGMENT  BypassMethod = 3
	BypassMethod_BYPASS_METHOD_UDP_FRAGMENT  BypassMethod = 4
	BypassMethod_BYPASS_METHOD_PROXY_CHAIN   BypassMethod = 5
)

// Enum value maps for BypassMethod.
var (
	BypassMethod_name = map[int32]string{
		0: "BYPASS_METHOD_UNSPECIFIED",
		1: "BYPASS_METHOD_HTTP_HEADER",
		2: "BYPASS_METHOD_TLS_HANDSHAKE",
		3: "BYPASS_METHOD_TCP_FRAGMENT",
		4: "BYPASS_METHOD_UDP_FRAGMENT",
		5: "BYPASS_METHOD_PROXY_CHAIN",
	}
	BypassMethod_value = map[string]int32{
		"BYPASS_METHOD_UNSPECIFIED":   0,
		"BYPASS_METHOD_HTTP_HEADER":   1,
		"BYPASS_METHOD_TLS_HANDSHAKE": 2,
		"BYPASS_METHOD_TCP_FRAGMENT":  3,
		"BYPASS_METHOD_UDP_FRAGMENT":  4,
		"BYPASS_METHOD_PROXY_CHAIN":   5,
	}
)

func (x BypassMethod) Enum() *BypassMethod {
	p := new(BypassMethod)
	*p = x
	return p
}

func (x BypassMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BypassMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_dpi_proto_enumTypes[1].Descriptor()
}

func (BypassMethod) Type() protoreflect.EnumType {
	return &file_dpi_proto_enumTypes[1]
}

func (x BypassMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BypassMethod.Descriptor instead.
func (BypassMethod) EnumDescriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{1}
}

type BypassStatus int32

const (
	BypassStatus_BYPASS_STATUS_UNSPECIFIED BypassStatus = 0
	BypassStatus_BYPASS_STATUS_INACTIVE    BypassStatus = 1
	BypassStatus_BYPASS_STATUS_ACTIVE      BypassStatus = 2
	BypassStatus_BYPASS_STATUS_ERROR       BypassStatus = 3
	BypassStatus_BYPASS_STATUS_TESTING     BypassStatus = 4
)

// Enum value maps for BypassStatus.
var (
	BypassStatus_name = map[int32]string{
		0: "BYPASS_STATUS_UNSPECIFIED",
		1: "BYPASS_STATUS_INACTIVE",
		2: "BYPASS_STATUS_ACTIVE",
		3: "BYPASS_STATUS_ERROR",
		4: "BYPASS_STATUS_TESTING",
	}
	BypassStatus_value = map[string]int32{
		"BYPASS_STATUS_UNSPECIFIED": 0,
		"BYPASS_STATUS_INACTIVE":    1,
		"BYPASS_STATUS_ACTIVE":      2,
		"BYPASS_STATUS_ERROR":       3,
		"BYPASS_STATUS_TESTING":     4,
	}
)

func (x BypassStatus) Enum() *BypassStatus {
	p := new(BypassStatus)
	*p = x
	return p
}

func (x BypassStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BypassStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_dpi_proto_enumTypes[2].Descriptor()
}

func (BypassStatus) Type() protoreflect.EnumType {
	return &file_dpi_proto_enumTypes[2]
}

func (x BypassStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BypassStatus.Descriptor instead.
func (BypassStatus) EnumDescriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{2}
}

type RuleType int32

const (
	RuleType_RULE_TYPE_UNSPECIFIED RuleType = 0
	RuleType_RULE_TYPE_DOMAIN      RuleType = 1
	RuleType_RULE_TYPE_IP          RuleType = 2
	RuleType_RULE_TYPE_PORT        RuleType = 3
	RuleType_RULE_TYPE_PROTOCOL    RuleType = 4
	RuleType_RULE_TYPE_REGEX       RuleType = 5
)

// Enum value maps for RuleType.
var (
	RuleType_name = map[int32]string{
		0: "RULE_TYPE_UNSPECIFIED",
		1: "RULE_TYPE_DOMAIN",
		2: "RULE_TYPE_IP",
		3: "RULE_TYPE_PORT",
		4: "RULE_TYPE_PROTOCOL",
		5: "RULE_TYPE_REGEX",
	}
	RuleType_value = map[string]int32{
		"RULE_TYPE_UNSPECIFIED": 0,
		"RULE_TYPE_DOMAIN":      1,
		"RULE_TYPE_IP":          2,
		"RULE_TYPE_PORT":        3,
		"RULE_TYPE_PROTOCOL":    4,
		"RULE_TYPE_REGEX":       5,
	}
)

func (x RuleType) Enum() *RuleType {
	p := new(RuleType)
	*p = x
	return p
}

func (x RuleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuleType) Descriptor() protoreflect.EnumDescriptor {
	return file_dpi_proto_enumTypes[3].Descriptor()
}

func (RuleType) Type() protoreflect.EnumType {
	return &file_dpi_proto_enumTypes[3]
}

func (x RuleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuleType.Descriptor instead.
func (RuleType) EnumDescriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{3}
}

type RuleAction int32

const (
	RuleAction_RULE_ACTION_UNSPECIFIED RuleAction = 0
	RuleAction_RULE_ACTION_ALLOW       RuleAction = 1
	RuleAction_RULE_ACTION_BLOCK       RuleAction = 2
	RuleAction_RULE_ACTION_BYPASS      RuleAction = 3
	RuleAction_RULE_ACTION_FRAGMENT    RuleAction = 4
	RuleAction_RULE_ACTION_OBFUSCATE   RuleAction = 5
)

// Enum value maps for RuleAction.
var (
	RuleAction_name = map[int32]string{
		0: "RULE_ACTION_UNSPECIFIED",
		1: "RULE_ACTION_ALLOW",
		2: "RULE_ACTION_BLOCK",
		3: "RULE_ACTION_BYPASS",
		4: "RULE_ACTION_FRAGMENT",
		5: "RULE_ACTION_OBFUSCATE",
	}
	RuleAction_value = map[string]int32{
		"RULE_ACTION_UNSPECIFIED": 0,
		"RULE_ACTION_ALLOW":       1,
		"RULE_ACTION_BLOCK":       2,
		"RULE_ACTION_BYPASS":      3,
		"RULE_ACTION_FRAGMENT":    4,
		"RULE_ACTION_OBFUSCATE":   5,
	}
)

func (x RuleAction) Enum() *RuleAction {
	p := new(RuleAction)
	*p = x
	return p
}

func (x RuleAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuleAction) Descriptor() protoreflect.EnumDescriptor {
	return file_dpi_proto_enumTypes[4].Descriptor()
}

func (RuleAction) Type() protoreflect.EnumType {
	return &file_dpi_proto_enumTypes[4]
}

func (x RuleAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuleAction.Descriptor instead.
func (RuleAction) EnumDescriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{4}
}

// Health
type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_dpi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{0}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_dpi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{1}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Bypass Configuration
type BypassConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type          BypassType             `protobuf:"varint,4,opt,name=type,proto3,enum=dpi.BypassType" json:"type,omitempty"`
	Method        BypassMethod           `protobuf:"varint,5,opt,name=method,proto3,enum=dpi.BypassMethod" json:"method,omitempty"`
	Status        BypassStatus           `protobuf:"varint,6,opt,name=status,proto3,enum=dpi.BypassStatus" json:"status,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,7,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Rules         []*BypassRule          `protobuf:"bytes,8,rep,name=rules,proto3" json:"rules,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BypassConfig) Reset() {
	*x = BypassConfig{}
	mi := &file_dpi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BypassConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BypassConfig) ProtoMessage() {}

func (x *BypassConfig) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BypassConfig.ProtoReflect.Descriptor instead.
func (*BypassConfig) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{2}
}

func (x *BypassConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BypassConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BypassConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BypassConfig) GetType() BypassType {
	if x != nil {
		return x.Type
	}
	return BypassType_BYPASS_TYPE_UNSPECIFIED
}

func (x *BypassConfig) GetMethod() BypassMethod {
	if x != nil {
		return x.Method
	}
	return BypassMethod_BYPASS_METHOD_UNSPECIFIED
}

func (x *BypassConfig) GetStatus() BypassStatus {
	if x != nil {
		return x.Status
	}
	return BypassStatus_BYPASS_STATUS_UNSPECIFIED
}

func (x *BypassConfig) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *BypassConfig) GetRules() []*BypassRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *BypassConfig) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BypassConfig) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateBypassConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type          BypassType             `protobuf:"varint,3,opt,name=type,proto3,enum=dpi.BypassType" json:"type,omitempty"`
	Method        BypassMethod           `protobuf:"varint,4,opt,name=method,proto3,enum=dpi.BypassMethod" json:"method,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBypassConfigRequest) Reset() {
	*x = CreateBypassConfigRequest{}
	mi := &file_dpi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBypassConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBypassConfigRequest) ProtoMessage() {}

func (x *CreateBypassConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBypassConfigRequest.ProtoReflect.Descriptor instead.
func (*CreateBypassConfigRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{3}
}

func (x *CreateBypassConfigRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBypassConfigRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateBypassConfigRequest) GetType() BypassType {
	if x != nil {
		return x.Type
	}
	return BypassType_BYPASS_TYPE_UNSPECIFIED
}

func (x *CreateBypassConfigRequest) GetMethod() BypassMethod {
	if x != nil {
		return x.Method
	}
	return BypassMethod_BYPASS_METHOD_UNSPECIFIED
}

func (x *CreateBypassConfigRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type GetBypassConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBypassConfigRequest) Reset() {
	*x = GetBypassConfigRequest{}
	mi := &file_dpi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBypassConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBypassConfigRequest) ProtoMessage() {}

func (x *GetBypassConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBypassConfigRequest.ProtoReflect.Descriptor instead.
func (*GetBypassConfigRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{4}
}

func (x *GetBypassConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListBypassConfigsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          BypassType             `protobuf:"varint,1,opt,name=type,proto3,enum=dpi.BypassType" json:"type,omitempty"`
	Status        BypassStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=dpi.BypassStatus" json:"status,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBypassConfigsRequest) Reset() {
	*x = ListBypassConfigsRequest{}
	mi := &file_dpi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBypassConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBypassConfigsRequest) ProtoMessage() {}

func (x *ListBypassConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBypassConfigsRequest.ProtoReflect.Descriptor instead.
func (*ListBypassConfigsRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{5}
}

func (x *ListBypassConfigsRequest) GetType() BypassType {
	if x != nil {
		return x.Type
	}
	return BypassType_BYPASS_TYPE_UNSPECIFIED
}

func (x *ListBypassConfigsRequest) GetStatus() BypassStatus {
	if x != nil {
		return x.Status
	}
	return BypassStatus_BYPASS_STATUS_UNSPECIFIED
}

func (x *ListBypassConfigsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListBypassConfigsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListBypassConfigsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Configs       []*BypassConfig        `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBypassConfigsResponse) Reset() {
	*x = ListBypassConfigsResponse{}
	mi := &file_dpi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBypassConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBypassConfigsResponse) ProtoMessage() {}

func (x *ListBypassConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBypassConfigsResponse.ProtoReflect.Descriptor instead.
func (*ListBypassConfigsResponse) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{6}
}

func (x *ListBypassConfigsResponse) GetConfigs() []*BypassConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

func (x *ListBypassConfigsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateBypassConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type          BypassType             `protobuf:"varint,4,opt,name=type,proto3,enum=dpi.BypassType" json:"type,omitempty"`
	Method        BypassMethod           `protobuf:"varint,5,opt,name=method,proto3,enum=dpi.BypassMethod" json:"method,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,6,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBypassConfigRequest) Reset() {
	*x = UpdateBypassConfigRequest{}
	mi := &file_dpi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBypassConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBypassConfigRequest) ProtoMessage() {}

func (x *UpdateBypassConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBypassConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateBypassConfigRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateBypassConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateBypassConfigRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateBypassConfigRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateBypassConfigRequest) GetType() BypassType {
	if x != nil {
		return x.Type
	}
	return BypassType_BYPASS_TYPE_UNSPECIFIED
}

func (x *UpdateBypassConfigRequest) GetMethod() BypassMethod {
	if x != nil {
		return x.Method
	}
	return BypassMethod_BYPASS_METHOD_UNSPECIFIED
}

func (x *UpdateBypassConfigRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type DeleteBypassConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBypassConfigRequest) Reset() {
	*x = DeleteBypassConfigRequest{}
	mi := &file_dpi_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBypassConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBypassConfigRequest) ProtoMessage() {}

func (x *DeleteBypassConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBypassConfigRequest.ProtoReflect.Descriptor instead.
func (*DeleteBypassConfigRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteBypassConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteBypassConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBypassConfigResponse) Reset() {
	*x = DeleteBypassConfigResponse{}
	mi := &file_dpi_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBypassConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBypassConfigResponse) ProtoMessage() {}

func (x *DeleteBypassConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBypassConfigResponse.ProtoReflect.Descriptor instead.
func (*DeleteBypassConfigResponse) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteBypassConfigResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Bypass Operations
type StartBypassRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigId      string                 `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	TargetHost    string                 `protobuf:"bytes,2,opt,name=target_host,json=targetHost,proto3" json:"target_host,omitempty"`
	TargetPort    int32                  `protobuf:"varint,3,opt,name=target_port,json=targetPort,proto3" json:"target_port,omitempty"`
	Options       map[string]string      `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartBypassRequest) Reset() {
	*x = StartBypassRequest{}
	mi := &file_dpi_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartBypassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBypassRequest) ProtoMessage() {}

func (x *StartBypassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBypassRequest.ProtoReflect.Descriptor instead.
func (*StartBypassRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{10}
}

func (x *StartBypassRequest) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *StartBypassRequest) GetTargetHost() string {
	if x != nil {
		return x.TargetHost
	}
	return ""
}

func (x *StartBypassRequest) GetTargetPort() int32 {
	if x != nil {
		return x.TargetPort
	}
	return 0
}

func (x *StartBypassRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type StartBypassResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartBypassResponse) Reset() {
	*x = StartBypassResponse{}
	mi := &file_dpi_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartBypassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBypassResponse) ProtoMessage() {}

func (x *StartBypassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBypassResponse.ProtoReflect.Descriptor instead.
func (*StartBypassResponse) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{11}
}

func (x *StartBypassResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartBypassResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StartBypassResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopBypassRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopBypassRequest) Reset() {
	*x = StopBypassRequest{}
	mi := &file_dpi_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopBypassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBypassRequest) ProtoMessage() {}

func (x *StopBypassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBypassRequest.ProtoReflect.Descriptor instead.
func (*StopBypassRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{12}
}

func (x *StopBypassRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type StopBypassResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopBypassResponse) Reset() {
	*x = StopBypassResponse{}
	mi := &file_dpi_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopBypassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBypassResponse) ProtoMessage() {}

func (x *StopBypassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBypassResponse.ProtoReflect.Descriptor instead.
func (*StopBypassResponse) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{13}
}

func (x *StopBypassResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopBypassResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBypassStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBypassStatusRequest) Reset() {
	*x = GetBypassStatusRequest{}
	mi := &file_dpi_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBypassStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBypassStatusRequest) ProtoMessage() {}

func (x *GetBypassStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBypassStatusRequest.ProtoReflect.Descriptor instead.
func (*GetBypassStatusRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{14}
}

func (x *GetBypassStatusRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetBypassStatusResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SessionId       string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Status          BypassStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=dpi.BypassStatus" json:"status,omitempty"`
	ConfigId        string                 `protobuf:"bytes,3,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	TargetHost      string                 `protobuf:"bytes,4,opt,name=target_host,json=targetHost,proto3" json:"target_host,omitempty"`
	TargetPort      int32                  `protobuf:"varint,5,opt,name=target_port,json=targetPort,proto3" json:"target_port,omitempty"`
	StartedAt       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	DurationSeconds int64                  `protobuf:"varint,7,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	Message         string                 `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetBypassStatusResponse) Reset() {
	*x = GetBypassStatusResponse{}
	mi := &file_dpi_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBypassStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBypassStatusResponse) ProtoMessage() {}

func (x *GetBypassStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBypassStatusResponse.ProtoReflect.Descriptor instead.
func (*GetBypassStatusResponse) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{15}
}

func (x *GetBypassStatusResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetBypassStatusResponse) GetStatus() BypassStatus {
	if x != nil {
		return x.Status
	}
	return BypassStatus_BYPASS_STATUS_UNSPECIFIED
}

func (x *GetBypassStatusResponse) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *GetBypassStatusResponse) GetTargetHost() string {
	if x != nil {
		return x.TargetHost
	}
	return ""
}

func (x *GetBypassStatusResponse) GetTargetPort() int32 {
	if x != nil {
		return x.TargetPort
	}
	return 0
}

func (x *GetBypassStatusResponse) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *GetBypassStatusResponse) GetDurationSeconds() int64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *GetBypassStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Statistics
type BypassStats struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Id                     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConfigId               string                 `protobuf:"bytes,2,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	SessionId              string                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	BytesSent              int64                  `protobuf:"varint,4,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived          int64                  `protobuf:"varint,5,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	PacketsSent            int64                  `protobuf:"varint,6,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	PacketsReceived        int64                  `protobuf:"varint,7,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	ConnectionsEstablished int64                  `protobuf:"varint,8,opt,name=connections_established,json=connectionsEstablished,proto3" json:"connections_established,omitempty"`
	ConnectionsFailed      int64                  `protobuf:"varint,9,opt,name=connections_failed,json=connectionsFailed,proto3" json:"connections_failed,omitempty"`
	SuccessRate            float64                `protobuf:"fixed64,10,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"`
	AverageLatency         float64                `protobuf:"fixed64,11,opt,name=average_latency,json=averageLatency,proto3" json:"average_latency,omitempty"`
	StartTime              *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime                *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BypassStats) Reset() {
	*x = BypassStats{}
	mi := &file_dpi_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BypassStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BypassStats) ProtoMessage() {}

func (x *BypassStats) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BypassStats.ProtoReflect.Descriptor instead.
func (*BypassStats) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{16}
}

func (x *BypassStats) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BypassStats) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *BypassStats) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *BypassStats) GetBytesSent() int64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *BypassStats) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *BypassStats) GetPacketsSent() int64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *BypassStats) GetPacketsReceived() int64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *BypassStats) GetConnectionsEstablished() int64 {
	if x != nil {
		return x.ConnectionsEstablished
	}
	return 0
}

func (x *BypassStats) GetConnectionsFailed() int64 {
	if x != nil {
		return x.ConnectionsFailed
	}
	return 0
}

func (x *BypassStats) GetSuccessRate() float64 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

func (x *BypassStats) GetAverageLatency() float64 {
	if x != nil {
		return x.AverageLatency
	}
	return 0
}

func (x *BypassStats) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *BypassStats) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetBypassStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ConfigId      string                 `protobuf:"bytes,2,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBypassStatsRequest) Reset() {
	*x = GetBypassStatsRequest{}
	mi := &file_dpi_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBypassStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBypassStatsRequest) ProtoMessage() {}

func (x *GetBypassStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBypassStatsRequest.ProtoReflect.Descriptor instead.
func (*GetBypassStatsRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{17}
}

func (x *GetBypassStatsRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetBypassStatsRequest) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

type GetBypassHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigId      string                 `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBypassHistoryRequest) Reset() {
	*x = GetBypassHistoryRequest{}
	mi := &file_dpi_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBypassHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBypassHistoryRequest) ProtoMessage() {}

func (x *GetBypassHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBypassHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetBypassHistoryRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{18}
}

func (x *GetBypassHistoryRequest) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *GetBypassHistoryRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetBypassHistoryRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetBypassHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetBypassHistoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetBypassHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*BypassHistoryEntry  `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBypassHistoryResponse) Reset() {
	*x = GetBypassHistoryResponse{}
	mi := &file_dpi_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBypassHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBypassHistoryResponse) ProtoMessage() {}

func (x *GetBypassHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBypassHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetBypassHistoryResponse) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{19}
}

func (x *GetBypassHistoryResponse) GetEntries() []*BypassHistoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *GetBypassHistoryResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type BypassHistoryEntry struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConfigId         string                 `protobuf:"bytes,2,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	SessionId        string                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TargetHost       string                 `protobuf:"bytes,4,opt,name=target_host,json=targetHost,proto3" json:"target_host,omitempty"`
	TargetPort       int32                  `protobuf:"varint,5,opt,name=target_port,json=targetPort,proto3" json:"target_port,omitempty"`
	Status           BypassStatus           `protobuf:"varint,6,opt,name=status,proto3,enum=dpi.BypassStatus" json:"status,omitempty"`
	StartedAt        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndedAt          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=ended_at,json=endedAt,proto3" json:"ended_at,omitempty"`
	DurationSeconds  int64                  `protobuf:"varint,9,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	BytesTransferred int64                  `protobuf:"varint,10,opt,name=bytes_transferred,json=bytesTransferred,proto3" json:"bytes_transferred,omitempty"`
	ErrorMessage     string                 `protobuf:"bytes,11,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BypassHistoryEntry) Reset() {
	*x = BypassHistoryEntry{}
	mi := &file_dpi_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BypassHistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BypassHistoryEntry) ProtoMessage() {}

func (x *BypassHistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BypassHistoryEntry.ProtoReflect.Descriptor instead.
func (*BypassHistoryEntry) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{20}
}

func (x *BypassHistoryEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BypassHistoryEntry) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *BypassHistoryEntry) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *BypassHistoryEntry) GetTargetHost() string {
	if x != nil {
		return x.TargetHost
	}
	return ""
}

func (x *BypassHistoryEntry) GetTargetPort() int32 {
	if x != nil {
		return x.TargetPort
	}
	return 0
}

func (x *BypassHistoryEntry) GetStatus() BypassStatus {
	if x != nil {
		return x.Status
	}
	return BypassStatus_BYPASS_STATUS_UNSPECIFIED
}

func (x *BypassHistoryEntry) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *BypassHistoryEntry) GetEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

func (x *BypassHistoryEntry) GetDurationSeconds() int64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *BypassHistoryEntry) GetBytesTransferred() int64 {
	if x != nil {
		return x.BytesTransferred
	}
	return 0
}

func (x *BypassHistoryEntry) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Bypass Rules
type BypassRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConfigId      string                 `protobuf:"bytes,2,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type          RuleType               `protobuf:"varint,4,opt,name=type,proto3,enum=dpi.RuleType" json:"type,omitempty"`
	Action        RuleAction             `protobuf:"varint,5,opt,name=action,proto3,enum=dpi.RuleAction" json:"action,omitempty"`
	Pattern       string                 `protobuf:"bytes,6,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,7,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Priority      int32                  `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`
	Enabled       bool                   `protobuf:"varint,9,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BypassRule) Reset() {
	*x = BypassRule{}
	mi := &file_dpi_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BypassRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BypassRule) ProtoMessage() {}

func (x *BypassRule) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BypassRule.ProtoReflect.Descriptor instead.
func (*BypassRule) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{21}
}

func (x *BypassRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BypassRule) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *BypassRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BypassRule) GetType() RuleType {
	if x != nil {
		return x.Type
	}
	return RuleType_RULE_TYPE_UNSPECIFIED
}

func (x *BypassRule) GetAction() RuleAction {
	if x != nil {
		return x.Action
	}
	return RuleAction_RULE_ACTION_UNSPECIFIED
}

func (x *BypassRule) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *BypassRule) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *BypassRule) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *BypassRule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *BypassRule) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BypassRule) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AddBypassRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigId      string                 `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          RuleType               `protobuf:"varint,3,opt,name=type,proto3,enum=dpi.RuleType" json:"type,omitempty"`
	Action        RuleAction             `protobuf:"varint,4,opt,name=action,proto3,enum=dpi.RuleAction" json:"action,omitempty"`
	Pattern       string                 `protobuf:"bytes,5,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,6,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Priority      int32                  `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBypassRuleRequest) Reset() {
	*x = AddBypassRuleRequest{}
	mi := &file_dpi_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBypassRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBypassRuleRequest) ProtoMessage() {}

func (x *AddBypassRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBypassRuleRequest.ProtoReflect.Descriptor instead.
func (*AddBypassRuleRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{22}
}

func (x *AddBypassRuleRequest) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *AddBypassRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddBypassRuleRequest) GetType() RuleType {
	if x != nil {
		return x.Type
	}
	return RuleType_RULE_TYPE_UNSPECIFIED
}

func (x *AddBypassRuleRequest) GetAction() RuleAction {
	if x != nil {
		return x.Action
	}
	return RuleAction_RULE_ACTION_UNSPECIFIED
}

func (x *AddBypassRuleRequest) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *AddBypassRuleRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *AddBypassRuleRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type UpdateBypassRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          RuleType               `protobuf:"varint,3,opt,name=type,proto3,enum=dpi.RuleType" json:"type,omitempty"`
	Action        RuleAction             `protobuf:"varint,4,opt,name=action,proto3,enum=dpi.RuleAction" json:"action,omitempty"`
	Pattern       string                 `protobuf:"bytes,5,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,6,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Priority      int32                  `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	Enabled       bool                   `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBypassRuleRequest) Reset() {
	*x = UpdateBypassRuleRequest{}
	mi := &file_dpi_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBypassRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBypassRuleRequest) ProtoMessage() {}

func (x *UpdateBypassRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBypassRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateBypassRuleRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateBypassRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateBypassRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateBypassRuleRequest) GetType() RuleType {
	if x != nil {
		return x.Type
	}
	return RuleType_RULE_TYPE_UNSPECIFIED
}

func (x *UpdateBypassRuleRequest) GetAction() RuleAction {
	if x != nil {
		return x.Action
	}
	return RuleAction_RULE_ACTION_UNSPECIFIED
}

func (x *UpdateBypassRuleRequest) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *UpdateBypassRuleRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *UpdateBypassRuleRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *UpdateBypassRuleRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type DeleteBypassRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBypassRuleRequest) Reset() {
	*x = DeleteBypassRuleRequest{}
	mi := &file_dpi_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBypassRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBypassRuleRequest) ProtoMessage() {}

func (x *DeleteBypassRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBypassRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteBypassRuleRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteBypassRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteBypassRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBypassRuleResponse) Reset() {
	*x = DeleteBypassRuleResponse{}
	mi := &file_dpi_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBypassRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBypassRuleResponse) ProtoMessage() {}

func (x *DeleteBypassRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBypassRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteBypassRuleResponse) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteBypassRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListBypassRulesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigId      string                 `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	Type          RuleType               `protobuf:"varint,2,opt,name=type,proto3,enum=dpi.RuleType" json:"type,omitempty"`
	Enabled       bool                   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBypassRulesRequest) Reset() {
	*x = ListBypassRulesRequest{}
	mi := &file_dpi_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBypassRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBypassRulesRequest) ProtoMessage() {}

func (x *ListBypassRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBypassRulesRequest.ProtoReflect.Descriptor instead.
func (*ListBypassRulesRequest) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{26}
}

func (x *ListBypassRulesRequest) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *ListBypassRulesRequest) GetType() RuleType {
	if x != nil {
		return x.Type
	}
	return RuleType_RULE_TYPE_UNSPECIFIED
}

func (x *ListBypassRulesRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ListBypassRulesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListBypassRulesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListBypassRulesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rules         []*BypassRule          `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBypassRulesResponse) Reset() {
	*x = ListBypassRulesResponse{}
	mi := &file_dpi_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBypassRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBypassRulesResponse) ProtoMessage() {}

func (x *ListBypassRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpi_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBypassRulesResponse.ProtoReflect.Descriptor instead.
func (*ListBypassRulesResponse) Descriptor() ([]byte, []int) {
	return file_dpi_proto_rawDescGZIP(), []int{27}
}

func (x *ListBypassRulesResponse) GetRules() []*BypassRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ListBypassRulesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_dpi_proto protoreflect.FileDescriptor

const file_dpi_proto_rawDesc = "" +
	"\n" +
	"\tdpi.proto\x12\x03dpi\x1a\x1fgoogle/protobuf/timestamp.proto\"\x0f\n" +
	"\rHealthRequest\"|\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xee\x03\n" +
	"\fBypassConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12#\n" +
	"\x04type\x18\x04 \x01(\x0e2\x0f.dpi.BypassTypeR\x04type\x12)\n" +
	"\x06method\x18\x05 \x01(\x0e2\x11.dpi.BypassMethodR\x06method\x12)\n" +
	"\x06status\x18\x06 \x01(\x0e2\x11.dpi.BypassStatusR\x06status\x12A\n" +
	"\n" +
	"parameters\x18\a \x03(\v2!.dpi.BypassConfig.ParametersEntryR\n" +
	"parameters\x12%\n" +
	"\x05rules\x18\b \x03(\v2\x0f.dpi.BypassRuleR\x05rules\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb0\x02\n" +
	"\x19CreateBypassConfigRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12#\n" +
	"\x04type\x18\x03 \x01(\x0e2\x0f.dpi.BypassTypeR\x04type\x12)\n" +
	"\x06method\x18\x04 \x01(\x0e2\x11.dpi.BypassMethodR\x06method\x12N\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v2..dpi.CreateBypassConfigRequest.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"(\n" +
	"\x16GetBypassConfigRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x98\x01\n" +
	"\x18ListBypassConfigsRequest\x12#\n" +
	"\x04type\x18\x01 \x01(\x0e2\x0f.dpi.BypassTypeR\x04type\x12)\n" +
	"\x06status\x18\x02 \x01(\x0e2\x11.dpi.BypassStatusR\x06status\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\"^\n" +
	"\x19ListBypassConfigsResponse\x12+\n" +
	"\aconfigs\x18\x01 \x03(\v2\x11.dpi.BypassConfigR\aconfigs\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xc0\x02\n" +
	"\x19UpdateBypassConfigRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12#\n" +
	"\x04type\x18\x04 \x01(\x0e2\x0f.dpi.BypassTypeR\x04type\x12)\n" +
	"\x06method\x18\x05 \x01(\x0e2\x11.dpi.BypassMethodR\x06method\x12N\n" +
	"\n" +
	"parameters\x18\x06 \x03(\v2..dpi.UpdateBypassConfigRequest.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"+\n" +
	"\x19DeleteBypassConfigRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"6\n" +
	"\x1aDeleteBypassConfigResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xef\x01\n" +
	"\x12StartBypassRequest\x12\x1b\n" +
	"\tconfig_id\x18\x01 \x01(\tR\bconfigId\x12\x1f\n" +
	"\vtarget_host\x18\x02 \x01(\tR\n" +
	"targetHost\x12\x1f\n" +
	"\vtarget_port\x18\x03 \x01(\x05R\n" +
	"targetPort\x12>\n" +
	"\aoptions\x18\x04 \x03(\v2$.dpi.StartBypassRequest.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"h\n" +
	"\x13StartBypassResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"2\n" +
	"\x11StopBypassRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"H\n" +
	"\x12StopBypassResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"7\n" +
	"\x16GetBypassStatusRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"\xc2\x02\n" +
	"\x17GetBypassStatusResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12)\n" +
	"\x06status\x18\x02 \x01(\x0e2\x11.dpi.BypassStatusR\x06status\x12\x1b\n" +
	"\tconfig_id\x18\x03 \x01(\tR\bconfigId\x12\x1f\n" +
	"\vtarget_host\x18\x04 \x01(\tR\n" +
	"targetHost\x12\x1f\n" +
	"\vtarget_port\x18\x05 \x01(\x05R\n" +
	"targetPort\x129\n" +
	"\n" +
	"started_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12)\n" +
	"\x10duration_seconds\x18\a \x01(\x03R\x0fdurationSeconds\x12\x18\n" +
	"\amessage\x18\b \x01(\tR\amessage\"\x93\x04\n" +
	"\vBypassStats\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tconfig_id\x18\x02 \x01(\tR\bconfigId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x04 \x01(\x03R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\x05 \x01(\x03R\rbytesReceived\x12!\n" +
	"\fpackets_sent\x18\x06 \x01(\x03R\vpacketsSent\x12)\n" +
	"\x10packets_received\x18\a \x01(\x03R\x0fpacketsReceived\x127\n" +
	"\x17connections_established\x18\b \x01(\x03R\x16connectionsEstablished\x12-\n" +
	"\x12connections_failed\x18\t \x01(\x03R\x11connectionsFailed\x12!\n" +
	"\fsuccess_rate\x18\n" +
	" \x01(\x01R\vsuccessRate\x12'\n" +
	"\x0faverage_latency\x18\v \x01(\x01R\x0eaverageLatency\x129\n" +
	"\n" +
	"start_time\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"S\n" +
	"\x15GetBypassStatsRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1b\n" +
	"\tconfig_id\x18\x02 \x01(\tR\bconfigId\"\xd6\x01\n" +
	"\x17GetBypassHistoryRequest\x12\x1b\n" +
	"\tconfig_id\x18\x01 \x01(\tR\bconfigId\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offset\"c\n" +
	"\x18GetBypassHistoryResponse\x121\n" +
	"\aentries\x18\x01 \x03(\v2\x17.dpi.BypassHistoryEntryR\aentries\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xbc\x03\n" +
	"\x12BypassHistoryEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tconfig_id\x18\x02 \x01(\tR\bconfigId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vtarget_host\x18\x04 \x01(\tR\n" +
	"targetHost\x12\x1f\n" +
	"\vtarget_port\x18\x05 \x01(\x05R\n" +
	"targetPort\x12)\n" +
	"\x06status\x18\x06 \x01(\x0e2\x11.dpi.BypassStatusR\x06status\x129\n" +
	"\n" +
	"started_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x125\n" +
	"\bended_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\aendedAt\x12)\n" +
	"\x10duration_seconds\x18\t \x01(\x03R\x0fdurationSeconds\x12+\n" +
	"\x11bytes_transferred\x18\n" +
	" \x01(\x03R\x10bytesTransferred\x12#\n" +
	"\rerror_message\x18\v \x01(\tR\ferrorMessage\"\xdf\x03\n" +
	"\n" +
	"BypassRule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tconfig_id\x18\x02 \x01(\tR\bconfigId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12!\n" +
	"\x04type\x18\x04 \x01(\x0e2\r.dpi.RuleTypeR\x04type\x12'\n" +
	"\x06action\x18\x05 \x01(\x0e2\x0f.dpi.RuleActionR\x06action\x12\x18\n" +
	"\apattern\x18\x06 \x01(\tR\apattern\x12?\n" +
	"\n" +
	"parameters\x18\a \x03(\v2\x1f.dpi.BypassRule.ParametersEntryR\n" +
	"parameters\x12\x1a\n" +
	"\bpriority\x18\b \x01(\x05R\bpriority\x12\x18\n" +
	"\aenabled\x18\t \x01(\bR\aenabled\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd3\x02\n" +
	"\x14AddBypassRuleRequest\x12\x1b\n" +
	"\tconfig_id\x18\x01 \x01(\tR\bconfigId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\x04type\x18\x03 \x01(\x0e2\r.dpi.RuleTypeR\x04type\x12'\n" +
	"\x06action\x18\x04 \x01(\x0e2\x0f.dpi.RuleActionR\x06action\x12\x18\n" +
	"\apattern\x18\x05 \x01(\tR\apattern\x12I\n" +
	"\n" +
	"parameters\x18\x06 \x03(\v2).dpi.AddBypassRuleRequest.ParametersEntryR\n" +
	"parameters\x12\x1a\n" +
	"\bpriority\x18\a \x01(\x05R\bpriority\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe6\x02\n" +
	"\x17UpdateBypassRuleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\x04type\x18\x03 \x01(\x0e2\r.dpi.RuleTypeR\x04type\x12'\n" +
	"\x06action\x18\x04 \x01(\x0e2\x0f.dpi.RuleActionR\x06action\x12\x18\n" +
	"\apattern\x18\x05 \x01(\tR\apattern\x12L\n" +
	"\n" +
	"parameters\x18\x06 \x03(\v2,.dpi.UpdateBypassRuleRequest.ParametersEntryR\n" +
	"parameters\x12\x1a\n" +
	"\bpriority\x18\a \x01(\x05R\bpriority\x12\x18\n" +
	"\aenabled\x18\b \x01(\bR\aenabled\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\")\n" +
	"\x17DeleteBypassRuleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"4\n" +
	"\x18DeleteBypassRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xa0\x01\n" +
	"\x16ListBypassRulesRequest\x12\x1b\n" +
	"\tconfig_id\x18\x01 \x01(\tR\bconfigId\x12!\n" +
	"\x04type\x18\x02 \x01(\x0e2\r.dpi.RuleTypeR\x04type\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offset\"V\n" +
	"\x17ListBypassRulesResponse\x12%\n" +
	"\x05rules\x18\x01 \x03(\v2\x0f.dpi.BypassRuleR\x05rules\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total*\xd7\x01\n" +
	"\n" +
	"BypassType\x12\x1b\n" +
	"\x17BYPASS_TYPE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bBYPASS_TYPE_DOMAIN_FRONTING\x10\x01\x12\x1b\n" +
	"\x17BYPASS_TYPE_SNI_MASKING\x10\x02\x12$\n" +
	" BYPASS_TYPE_PACKET_FRAGMENTATION\x10\x03\x12$\n" +
	" BYPASS_TYPE_PROTOCOL_OBFUSCATION\x10\x04\x12\"\n" +
	"\x1eBYPASS_TYPE_TUNNEL_OBFUSCATION\x10\x05*\xcc\x01\n" +
	"\fBypassMethod\x12\x1d\n" +
	"\x19BYPASS_METHOD_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19BYPASS_METHOD_HTTP_HEADER\x10\x01\x12\x1f\n" +
	"\x1bBYPASS_METHOD_TLS_HANDSHAKE\x10\x02\x12\x1e\n" +
	"\x1aBYPASS_METHOD_TCP_FRAGMENT\x10\x03\x12\x1e\n" +
	"\x1aBYPASS_METHOD_UDP_FRAGMENT\x10\x04\x12\x1d\n" +
	"\x19BYPASS_METHOD_PROXY_CHAIN\x10\x05*\x97\x01\n" +
	"\fBypassStatus\x12\x1d\n" +
	"\x19BYPASS_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16BYPASS_STATUS_INACTIVE\x10\x01\x12\x18\n" +
	"\x14BYPASS_STATUS_ACTIVE\x10\x02\x12\x17\n" +
	"\x13BYPASS_STATUS_ERROR\x10\x03\x12\x19\n" +
	"\x15BYPASS_STATUS_TESTING\x10\x04*\x8e\x01\n" +
	"\bRuleType\x12\x19\n" +
	"\x15RULE_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10RULE_TYPE_DOMAIN\x10\x01\x12\x10\n" +
	"\fRULE_TYPE_IP\x10\x02\x12\x12\n" +
	"\x0eRULE_TYPE_PORT\x10\x03\x12\x16\n" +
	"\x12RULE_TYPE_PROTOCOL\x10\x04\x12\x13\n" +
	"\x0fRULE_TYPE_REGEX\x10\x05*\xa4\x01\n" +
	"\n" +
	"RuleAction\x12\x1b\n" +
	"\x17RULE_ACTION_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11RULE_ACTION_ALLOW\x10\x01\x12\x15\n" +
	"\x11RULE_ACTION_BLOCK\x10\x02\x12\x16\n" +
	"\x12RULE_ACTION_BYPASS\x10\x03\x12\x18\n" +
	"\x14RULE_ACTION_FRAGMENT\x10\x04\x12\x19\n" +
	"\x15RULE_ACTION_OBFUSCATE\x10\x052\xc4\b\n" +
	"\x10DpiBypassService\x121\n" +
	"\x06Health\x12\x12.dpi.HealthRequest\x1a\x13.dpi.HealthResponse\x12G\n" +
	"\x12CreateBypassConfig\x12\x1e.dpi.CreateBypassConfigRequest\x1a\x11.dpi.BypassConfig\x12A\n" +
	"\x0fGetBypassConfig\x12\x1b.dpi.GetBypassConfigRequest\x1a\x11.dpi.BypassConfig\x12R\n" +
	"\x11ListBypassConfigs\x12\x1d.dpi.ListBypassConfigsRequest\x1a\x1e.dpi.ListBypassConfigsResponse\x12G\n" +
	"\x12UpdateBypassConfig\x12\x1e.dpi.UpdateBypassConfigRequest\x1a\x11.dpi.BypassConfig\x12U\n" +
	"\x12DeleteBypassConfig\x12\x1e.dpi.DeleteBypassConfigRequest\x1a\x1f.dpi.DeleteBypassConfigResponse\x12@\n" +
	"\vStartBypass\x12\x17.dpi.StartBypassRequest\x1a\x18.dpi.StartBypassResponse\x12=\n" +
	"\n" +
	"StopBypass\x12\x16.dpi.StopBypassRequest\x1a\x17.dpi.StopBypassResponse\x12L\n" +
	"\x0fGetBypassStatus\x12\x1b.dpi.GetBypassStatusRequest\x1a\x1c.dpi.GetBypassStatusResponse\x12>\n" +
	"\x0eGetBypassStats\x12\x1a.dpi.GetBypassStatsRequest\x1a\x10.dpi.BypassStats\x12O\n" +
	"\x10GetBypassHistory\x12\x1c.dpi.GetBypassHistoryRequest\x1a\x1d.dpi.GetBypassHistoryResponse\x12;\n" +
	"\rAddBypassRule\x12\x19.dpi.AddBypassRuleRequest\x1a\x0f.dpi.BypassRule\x12A\n" +
	"\x10UpdateBypassRule\x12\x1c.dpi.UpdateBypassRuleRequest\x1a\x0f.dpi.BypassRule\x12O\n" +
	"\x10DeleteBypassRule\x12\x1c.dpi.DeleteBypassRuleRequest\x1a\x1d.dpi.DeleteBypassRuleResponse\x12L\n" +
	"\x0fListBypassRules\x12\x1b.dpi.ListBypassRulesRequest\x1a\x1c.dpi.ListBypassRulesResponseB5Z3github.com/par1ram/silence/rpc/dpi-bypass/api/protob\x06proto3"

var (
	file_dpi_proto_rawDescOnce sync.Once
	file_dpi_proto_rawDescData []byte
)

func file_dpi_proto_rawDescGZIP() []byte {
	file_dpi_proto_rawDescOnce.Do(func() {
		file_dpi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dpi_proto_rawDesc), len(file_dpi_proto_rawDesc)))
	})
	return file_dpi_proto_rawDescData
}

var file_dpi_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_dpi_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_dpi_proto_goTypes = []any{
	(BypassType)(0),                    // 0: dpi.BypassType
	(BypassMethod)(0),                  // 1: dpi.BypassMethod
	(BypassStatus)(0),                  // 2: dpi.BypassStatus
	(RuleType)(0),                      // 3: dpi.RuleType
	(RuleAction)(0),                    // 4: dpi.RuleAction
	(*HealthRequest)(nil),              // 5: dpi.HealthRequest
	(*HealthResponse)(nil),             // 6: dpi.HealthResponse
	(*BypassConfig)(nil),               // 7: dpi.BypassConfig
	(*CreateBypassConfigRequest)(nil),  // 8: dpi.CreateBypassConfigRequest
	(*GetBypassConfigRequest)(nil),     // 9: dpi.GetBypassConfigRequest
	(*ListBypassConfigsRequest)(nil),   // 10: dpi.ListBypassConfigsRequest
	(*ListBypassConfigsResponse)(nil),  // 11: dpi.ListBypassConfigsResponse
	(*UpdateBypassConfigRequest)(nil),  // 12: dpi.UpdateBypassConfigRequest
	(*DeleteBypassConfigRequest)(nil),  // 13: dpi.DeleteBypassConfigRequest
	(*DeleteBypassConfigResponse)(nil), // 14: dpi.DeleteBypassConfigResponse
	(*StartBypassRequest)(nil),         // 15: dpi.StartBypassRequest
	(*StartBypassResponse)(nil),        // 16: dpi.StartBypassResponse
	(*StopBypassRequest)(nil),          // 17: dpi.StopBypassRequest
	(*StopBypassResponse)(nil),         // 18: dpi.StopBypassResponse
	(*GetBypassStatusRequest)(nil),     // 19: dpi.GetBypassStatusRequest
	(*GetBypassStatusResponse)(nil),    // 20: dpi.GetBypassStatusResponse
	(*BypassStats)(nil),                // 21: dpi.BypassStats
	(*GetBypassStatsRequest)(nil),      // 22: dpi.GetBypassStatsRequest
	(*GetBypassHistoryRequest)(nil),    // 23: dpi.GetBypassHistoryRequest
	(*GetBypassHistoryResponse)(nil),   // 24: dpi.GetBypassHistoryResponse
	(*BypassHistoryEntry)(nil),         // 25: dpi.BypassHistoryEntry
	(*BypassRule)(nil),                 // 26: dpi.BypassRule
	(*AddBypassRuleRequest)(nil),       // 27: dpi.AddBypassRuleRequest
	(*UpdateBypassRuleRequest)(nil),    // 28: dpi.UpdateBypassRuleRequest
	(*DeleteBypassRuleRequest)(nil),    // 29: dpi.DeleteBypassRuleRequest
	(*DeleteBypassRuleResponse)(nil),   // 30: dpi.DeleteBypassRuleResponse
	(*ListBypassRulesRequest)(nil),     // 31: dpi.ListBypassRulesRequest
	(*ListBypassRulesResponse)(nil),    // 32: dpi.ListBypassRulesResponse
	nil,                                // 33: dpi.BypassConfig.ParametersEntry
	nil,                                // 34: dpi.CreateBypassConfigRequest.ParametersEntry
	nil,                                // 35: dpi.UpdateBypassConfigRequest.ParametersEntry
	nil,                                // 36: dpi.StartBypassRequest.OptionsEntry
	nil,                                // 37: dpi.BypassRule.ParametersEntry
	nil,                                // 38: dpi.AddBypassRuleRequest.ParametersEntry
	nil,                                // 39: dpi.UpdateBypassRuleRequest.ParametersEntry
	(*timestamppb.Timestamp)(nil),      // 40: google.protobuf.Timestamp
}
var file_dpi_proto_depIdxs = []int32{
	40, // 0: dpi.HealthResponse.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 1: dpi.BypassConfig.type:type_name -> dpi.BypassType
	1,  // 2: dpi.BypassConfig.method:type_name -> dpi.BypassMethod
	2,  // 3: dpi.BypassConfig.status:type_name -> dpi.BypassStatus
	33, // 4: dpi.BypassConfig.parameters:type_name -> dpi.BypassConfig.ParametersEntry
	26, // 5: dpi.BypassConfig.rules:type_name -> dpi.BypassRule
	40, // 6: dpi.BypassConfig.created_at:type_name -> google.protobuf.Timestamp
	40, // 7: dpi.BypassConfig.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 8: dpi.CreateBypassConfigRequest.type:type_name -> dpi.BypassType
	1,  // 9: dpi.CreateBypassConfigRequest.method:type_name -> dpi.BypassMethod
	34, // 10: dpi.CreateBypassConfigRequest.parameters:type_name -> dpi.CreateBypassConfigRequest.ParametersEntry
	0,  // 11: dpi.ListBypassConfigsRequest.type:type_name -> dpi.BypassType
	2,  // 12: dpi.ListBypassConfigsRequest.status:type_name -> dpi.BypassStatus
	7,  // 13: dpi.ListBypassConfigsResponse.configs:type_name -> dpi.BypassConfig
	0,  // 14: dpi.UpdateBypassConfigRequest.type:type_name -> dpi.BypassType
	1,  // 15: dpi.UpdateBypassConfigRequest.method:type_name -> dpi.BypassMethod
	35, // 16: dpi.UpdateBypassConfigRequest.parameters:type_name -> dpi.UpdateBypassConfigRequest.ParametersEntry
	36, // 17: dpi.StartBypassRequest.options:type_name -> dpi.StartBypassRequest.OptionsEntry
	2,  // 18: dpi.GetBypassStatusResponse.status:type_name -> dpi.BypassStatus
	40, // 19: dpi.GetBypassStatusResponse.started_at:type_name -> google.protobuf.Timestamp
	40, // 20: dpi.BypassStats.start_time:type_name -> google.protobuf.Timestamp
	40, // 21: dpi.BypassStats.end_time:type_name -> google.protobuf.Timestamp
	40, // 22: dpi.GetBypassHistoryRequest.start_time:type_name -> google.protobuf.Timestamp
	40, // 23: dpi.GetBypassHistoryRequest.end_time:type_name -> google.protobuf.Timestamp
	25, // 24: dpi.GetBypassHistoryResponse.entries:type_name -> dpi.BypassHistoryEntry
	2,  // 25: dpi.BypassHistoryEntry.status:type_name -> dpi.BypassStatus
	40, // 26: dpi.BypassHistoryEntry.started_at:type_name -> google.protobuf.Timestamp
	40, // 27: dpi.BypassHistoryEntry.ended_at:type_name -> google.protobuf.Timestamp
	3,  // 28: dpi.BypassRule.type:type_name -> dpi.RuleType
	4,  // 29: dpi.BypassRule.action:type_name -> dpi.RuleAction
	37, // 30: dpi.BypassRule.parameters:type_name -> dpi.BypassRule.ParametersEntry
	40, // 31: dpi.BypassRule.created_at:type_name -> google.protobuf.Timestamp
	40, // 32: dpi.BypassRule.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 33: dpi.AddBypassRuleRequest.type:type_name -> dpi.RuleType
	4,  // 34: dpi.AddBypassRuleRequest.action:type_name -> dpi.RuleAction
	38, // 35: dpi.AddBypassRuleRequest.parameters:type_name -> dpi.AddBypassRuleRequest.ParametersEntry
	3,  // 36: dpi.UpdateBypassRuleRequest.type:type_name -> dpi.RuleType
	4,  // 37: dpi.UpdateBypassRuleRequest.action:type_name -> dpi.RuleAction
	39, // 38: dpi.UpdateBypassRuleRequest.parameters:type_name -> dpi.UpdateBypassRuleRequest.ParametersEntry
	3,  // 39: dpi.ListBypassRulesRequest.type:type_name -> dpi.RuleType
	26, // 40: dpi.ListBypassRulesResponse.rules:type_name -> dpi.BypassRule
	5,  // 41: dpi.DpiBypassService.Health:input_type -> dpi.HealthRequest
	8,  // 42: dpi.DpiBypassService.CreateBypassConfig:input_type -> dpi.CreateBypassConfigRequest
	9,  // 43: dpi.DpiBypassService.GetBypassConfig:input_type -> dpi.GetBypassConfigRequest
	10, // 44: dpi.DpiBypassService.ListBypassConfigs:input_type -> dpi.ListBypassConfigsRequest
	12, // 45: dpi.DpiBypassService.UpdateBypassConfig:input_type -> dpi.UpdateBypassConfigRequest
	13, // 46: dpi.DpiBypassService.DeleteBypassConfig:input_type -> dpi.DeleteBypassConfigRequest
	15, // 47: dpi.DpiBypassService.StartBypass:input_type -> dpi.StartBypassRequest
	17, // 48: dpi.DpiBypassService.StopBypass:input_type -> dpi.StopBypassRequest
	19, // 49: dpi.DpiBypassService.GetBypassStatus:input_type -> dpi.GetBypassStatusRequest
	22, // 50: dpi.DpiBypassService.GetBypassStats:input_type -> dpi.GetBypassStatsRequest
	23, // 51: dpi.DpiBypassService.GetBypassHistory:input_type -> dpi.GetBypassHistoryRequest
	27, // 52: dpi.DpiBypassService.AddBypassRule:input_type -> dpi.AddBypassRuleRequest
	28, // 53: dpi.DpiBypassService.UpdateBypassRule:input_type -> dpi.UpdateBypassRuleRequest
	29, // 54: dpi.DpiBypassService.DeleteBypassRule:input_type -> dpi.DeleteBypassRuleRequest
	31, // 55: dpi.DpiBypassService.ListBypassRules:input_type -> dpi.ListBypassRulesRequest
	6,  // 56: dpi.DpiBypassService.Health:output_type -> dpi.HealthResponse
	7,  // 57: dpi.DpiBypassService.CreateBypassConfig:output_type -> dpi.BypassConfig
	7,  // 58: dpi.DpiBypassService.GetBypassConfig:output_type -> dpi.BypassConfig
	11, // 59: dpi.DpiBypassService.ListBypassConfigs:output_type -> dpi.ListBypassConfigsResponse
	7,  // 60: dpi.DpiBypassService.UpdateBypassConfig:output_type -> dpi.BypassConfig
	14, // 61: dpi.DpiBypassService.DeleteBypassConfig:output_type -> dpi.DeleteBypassConfigResponse
	16, // 62: dpi.DpiBypassService.StartBypass:output_type -> dpi.StartBypassResponse
	18, // 63: dpi.DpiBypassService.StopBypass:output_type -> dpi.StopBypassResponse
	20, // 64: dpi.DpiBypassService.GetBypassStatus:output_type -> dpi.GetBypassStatusResponse
	21, // 65: dpi.DpiBypassService.GetBypassStats:output_type -> dpi.BypassStats
	24, // 66: dpi.DpiBypassService.GetBypassHistory:output_type -> dpi.GetBypassHistoryResponse
	26, // 67: dpi.DpiBypassService.AddBypassRule:output_type -> dpi.BypassRule
	26, // 68: dpi.DpiBypassService.UpdateBypassRule:output_type -> dpi.BypassRule
	30, // 69: dpi.DpiBypassService.DeleteBypassRule:output_type -> dpi.DeleteBypassRuleResponse
	32, // 70: dpi.DpiBypassService.ListBypassRules:output_type -> dpi.ListBypassRulesResponse
	56, // [56:71] is the sub-list for method output_type
	41, // [41:56] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_dpi_proto_init() }
func file_dpi_proto_init() {
	if File_dpi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dpi_proto_rawDesc), len(file_dpi_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dpi_proto_goTypes,
		DependencyIndexes: file_dpi_proto_depIdxs,
		EnumInfos:         file_dpi_proto_enumTypes,
		MessageInfos:      file_dpi_proto_msgTypes,
	}.Build()
	File_dpi_proto = out.File
	file_dpi_proto_goTypes = nil
	file_dpi_proto_depIdxs = nil
}
