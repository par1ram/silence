# Server Manager Service Configuration

# HTTP Server
HTTP_PORT=8085
GRPC_PORT=9085
HTTP_READ_TIMEOUT=30s
HTTP_WRITE_TIMEOUT=30s
HTTP_IDLE_TIMEOUT=60s

# Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=password
DB_NAME=silence_server_manager
DB_SSLMODE=disable

# Docker Configuration
DOCKER_HOST=unix:///var/run/docker.sock
DOCKER_API_VERSION=1.41
DOCKER_TIMEOUT=30s
DOCKER_REGISTRY=
DOCKER_NETWORK=silence_network

# Version
VERSION=1.0.0

# Server Management Configuration
MAX_SERVERS=100
DEFAULT_SERVER_TYPE=wireguard
SERVER_HEALTH_CHECK_INTERVAL=30s
SERVER_METRICS_COLLECTION_INTERVAL=60s

# Kubernetes Configuration (если используется)
KUBERNETES_ENABLED=false
KUBERNETES_CONFIG_PATH=
KUBERNETES_NAMESPACE=silence

# Cloud Provider Configuration
CLOUD_PROVIDER=
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
DIGITALOCEAN_TOKEN=
LINODE_TOKEN=

# Server Templates
DEFAULT_SERVER_IMAGE=silence/vpn-server:latest
SERVER_CPU_LIMIT=2
SERVER_MEMORY_LIMIT=4Gi
SERVER_STORAGE_LIMIT=10Gi

# Security
INTERNAL_API_TOKEN=super-secret-internal-token
ADMIN_API_KEY=development-admin-api-key
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=1m

# Migrations
MIGRATIONS_DIR=./internal/adapters/database/migrations

# Logging
LOG_LEVEL=info
LOG_FORMAT=json

# Monitoring
METRICS_ENABLED=true
METRICS_PORT=9105
HEALTH_CHECK_INTERVAL=30s

# Backup Configuration
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=7

# Load Balancing
LOAD_BALANCER_ENABLED=true
LOAD_BALANCER_ALGORITHM=round_robin
HEALTH_CHECK_TIMEOUT=5s
HEALTH_CHECK_RETRIES=3

# Auto Scaling
AUTO_SCALING_ENABLED=false
MIN_SERVERS=2
MAX_SERVERS=10
SCALE_UP_THRESHOLD=80
SCALE_DOWN_THRESHOLD=20
SCALE_COOLDOWN=300s
